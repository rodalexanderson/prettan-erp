{"ast":null,"code":"import { auth } from \"./firebase\";\nimport { GoogleAuthProvider, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { getDataById, getDocRef } from \"./CRUD\";\nimport { setDoc } from \"firebase/firestore\";\nconst provider = new GoogleAuthProvider();\nexport const addUser = async user => {\n  const {\n    uid,\n    displayName,\n    email,\n    photoURL\n  } = user;\n  const docRef = getDocRef(\"users\", uid);\n  const userExist = await getDataById(\"users\", uid);\n\n  if (!userExist) {\n    await setDoc(docRef, {\n      email: email,\n      name: displayName,\n      photo: photoURL,\n      uid\n    });\n  }\n}; // SE USA POPUP PARA LOGIN\n\nexport const lognInGoogle = async () => {\n  try {\n    const userCredentials = await signInWithPopup(auth, provider);\n    addUser(userCredentials.user);\n    return userCredentials.user;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const signOutGoogle = async () => {\n  signOut(auth);\n};\nexport const handleAuthChange = async callback => {\n  const unSuscribe = onAuthStateChanged(auth, callback);\n  return unSuscribe;\n};","map":{"version":3,"sources":["/Users/efecto10/Desktop/Proyectos/Rod Alexanderson/rodan-app/src/Services/authGoogle.jsx"],"names":["auth","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","signOut","getDataById","getDocRef","setDoc","provider","addUser","user","uid","displayName","email","photoURL","docRef","userExist","name","photo","lognInGoogle","userCredentials","err","console","log","message","signOutGoogle","handleAuthChange","callback","unSuscribe"],"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,kBAA9C,EAAkEC,OAAlE,QAAiF,eAAjF;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,QAAvC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,MAAMC,QAAQ,GAAG,IAAIP,kBAAJ,EAAjB;AAEA,OAAO,MAAMQ,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACnC,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,WAAN;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAsCJ,IAA5C;AACA,QAAMK,MAAM,GAAGT,SAAS,CAAC,OAAD,EAAUK,GAAV,CAAxB;AACA,QAAMK,SAAS,GAAG,MAAMX,WAAW,CAAC,OAAD,EAAUM,GAAV,CAAnC;;AAEA,MAAG,CAACK,SAAJ,EAAc;AACV,UAAMT,MAAM,CAACQ,MAAD,EAAS;AACjBF,MAAAA,KAAK,EAAEA,KADU;AAEjBI,MAAAA,IAAI,EAAEL,WAFW;AAGjBM,MAAAA,KAAK,EAAEJ,QAHU;AAIjBH,MAAAA;AAJiB,KAAT,CAAZ;AAMH;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAMQ,YAAY,GAAG,YAAW;AACnC,MAAG;AACC,UAAMC,eAAe,GAAG,MAAMlB,eAAe,CAACF,IAAD,EAAOQ,QAAP,CAA7C;AACAC,IAAAA,OAAO,CAACW,eAAe,CAACV,IAAjB,CAAP;AACA,WAAOU,eAAe,CAACV,IAAvB;AACH,GAJD,CAIE,OAAMW,GAAN,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,aAAa,GAAG,YAAY;AACrCrB,EAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,CAFM;AAIP,OAAO,MAAM0B,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAChD,QAAMC,UAAU,GAAGzB,kBAAkB,CAACH,IAAD,EAAO2B,QAAP,CAArC;AACA,SAAOC,UAAP;AACH,CAHM","sourcesContent":["import { auth } from \"./firebase\";\nimport { GoogleAuthProvider, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { getDataById, getDocRef } from \"./CRUD\";\nimport { setDoc } from \"firebase/firestore\";\n\nconst provider = new GoogleAuthProvider();\n\nexport const addUser = async (user) => {\n    const {uid, displayName, email, photoURL} = user;\n    const docRef = getDocRef(\"users\", uid);\n    const userExist = await getDataById(\"users\", uid);\n\n    if(!userExist){\n        await setDoc(docRef, {\n            email: email, \n            name: displayName,\n            photo: photoURL,\n            uid, \n        });\n    }\n};\n\n// SE USA POPUP PARA LOGIN\nexport const lognInGoogle = async ()=> {\n    try{\n        const userCredentials = await signInWithPopup(auth, provider);\n        addUser(userCredentials.user);\n        return userCredentials.user;\n    } catch(err){\n        console.log(err.message);\n    }\n}\n\nexport const signOutGoogle = async () => {\n    signOut(auth);\n}\n\nexport const handleAuthChange = async (callback) => {\n    const unSuscribe = onAuthStateChanged(auth, callback)\n    return unSuscribe\n}"]},"metadata":{},"sourceType":"module"}