{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboardcopy\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport ExpenseCard from \"../../Components/ExpenseCard\"; // import { useNavigate } from \"react-router-dom\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaDeptos, setListaDeptos] = useState([]); // const navigate = useNavigate()\n  // date = new Date().toLocaleDateString()\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"expenses\"), data => {\n      setListaDeptos(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildings = [...new Set(listaDeptos === null || listaDeptos === void 0 ? void 0 : listaDeptos.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n  console.log(uniqueBuildings);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-style: italic w-full flex flex-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl text-center\",\n        children: \"Gastos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: listaDeptos && (uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-xl\",\n            children: uniqueBuilding\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), listaDeptos.filter(expense => expense.property === uniqueBuilding).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(ExpenseCard, {\n            id: _index,\n            color: filteredBuilding.color,\n            expense: filteredBuilding\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 23\n          }, this))]\n        }, buildingIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl text-center\",\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), \"console.log(setListaDeptos)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Dashboard, \"cUvd8wFAuf35tqlpEsO2q6o6Lx0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboardcopy/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","ExpenseCard","Dashboard","listaDeptos","setListaDeptos","unSubscribe","data","docs","map","doc","id","uniqueBuildings","Set","property","console","log","uniqueBuilding","buildingIndex","filter","expense","filteredBuilding","_index","color"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CADsB,CAEtB;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGN,UAAU,CAACC,gBAAgB,CAAC,UAAD,CAAjB,EAAgCM,IAAD,IAAU;AACrEF,MAAAA,cAAc,CACZE,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeC,GAAD,IAAS;AACrB,eAAO,EAAC,GAAGA,GAAG,CAACH,IAAJ,EAAJ;AAAgBI,UAAAA,EAAE,EAAED,GAAG,CAACC;AAAxB,SAAP;AACD,OAFD,CADY,CAAd;AAKD,KAN6B,CAA9B;AAOA,WAAO,MAAM;AACXL,MAAAA,WAAW;AACZ,KAFD;AAGA,GAXO,EAWL,EAXK,CAAT;AAaD,QAAMM,eAAe,GAAG,CACtB,GAAG,IAAIC,GAAJ,CAAQT,WAAR,aAAQA,WAAR,uBAAQA,WAAW,CAAEK,GAAb,CAAiB;AAAA,QAAC;AAACK,MAAAA;AAAD,KAAD;AAAA,WAAgBA,QAAhB;AAAA,GAAjB,CAAR,CADmB,CAAxB;AAGCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA,4BACG;AAAA,8BACM;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAEM;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,kBACGR,WAAW,KAAIQ,eAAJ,aAAIA,eAAJ,uBAAIA,eAAe,CAAEH,GAAjB,CAAqB,CAACQ,cAAD,EAAiBC,aAAjB,kBACnC;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,sBAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,EAEKb,WAAW,CAACe,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACN,QAAR,KAAqBG,cAAnD,EACAR,GADA,CACI,CAACY,gBAAD,EAAmBC,MAAnB,kBACH,QAAC,WAAD;AACA,YAAA,EAAE,EAAEA,MADJ;AAEA,YAAA,KAAK,EAAED,gBAAgB,CAACE,KAFxB;AAGA,YAAA,OAAO,EAAEF;AAHT;AAAA;AAAA;AAAA;AAAA,kBAFD,CAFL;AAAA,WAAUH,aAAV;AAAA;AAAA;AAAA;AAAA,gBADc,CAAJ;AADd;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAoBK;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BE,CAlDH;;GAAMf,S;;KAAAA,S;AAoDJ,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport ExpenseCard from \"../../Components/ExpenseCard\"\n// import { useNavigate } from \"react-router-dom\"\n\nconst Dashboard = () => {\n  const [listaDeptos, setListaDeptos] = useState([])\n  // const navigate = useNavigate()\n  // date = new Date().toLocaleDateString()\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"expenses\"), (data) => {\n      setListaDeptos(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n   }, [])\n\n const uniqueBuildings = [\n   ...new Set(listaDeptos?.map(({property}) => property))\n  ]\n  console.log(uniqueBuildings)\n \n return (\n   <div className=\"font-style: italic w-full flex flex-wrap\">\n      <div>\n            <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n            <div className=\"\">\n              {listaDeptos && uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaDeptos.filter(expense => expense.property === uniqueBuilding)\n                    .map((filteredBuilding, _index) => (\n                      <ExpenseCard\n                      id={_index}\n                      color={filteredBuilding.color}\n                      expense={filteredBuilding}\n                      />\n                    ))\n                    }\n                </div>\n              ))}\n            </div>\n      </div>\n        <div>\n          <h1 className=\"font-bold text-2xl text-center\">Income</h1>\n        </div>\n        console.log(setListaDeptos)\n    </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}