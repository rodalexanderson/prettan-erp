{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport TicketCard from \"../../Components/TicketCard\"; // import Chart from \"../Chart\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaTickets, setListaTickets] = useState([]); // const [buildingName, setBuildingName] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaTickets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildingsWithTickets = [...new Set(listaTickets === null || listaTickets === void 0 ? void 0 : listaTickets.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))]; // console.log('this is unique buildings' + uniqueBuildings)\n  //   const handleChange = (e) => {\n  //     const value = e.target.value\n  //     setBuildingName(() => ({\n  //         propertyName: value\n  //     })\n  //     )\n  // }\n\n  {\n    /*#__PURE__*/\n    _jsxDEV(\"select\", {\n      name: \"jskjsk\",\n      id: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 2\n    }, this);\n  } // <select\n  //     name=\"buildingName\" \n  //     value={buildingName}\n  //     onChange={handleChange}\n  //     className=\"shadow appearance-none border rounded w-2/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n  //     >\n  //       <>\n  //       <>\n  //       <option disabled value={buildingName}> -- select an option -- </option>\n  //       </>\n  //       {listaTickets?.map((uniqueBuilding) => (\n  //       <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n  //       ))}\n  //       </>\n  //   </select> \n\n  const chartIncomeBuilding = listaTickets.filter(function (ticket) {\n    return ticket.property === 'San Cosme' && ticket.type === 'income';\n  });\n  const amountIncomeArr = chartIncomeBuilding.map(property => {\n    return property.amount;\n  }); // const datesIncomeArr = chartIncomeBuilding.map((property) => {\n  //   return property.date\n  // })  \n  // const chartExpenseBuilding = listaTickets.filter(function(ticket){\n  //   return (ticket.property === 'San Cosme' && ticket.type === 'expense')\n  // })\n  // const amountExpenseArr = chartExpenseBuilding.map((property) => {\n  //   return property.amount\n  // }) \n  // const datesExpenseArr = chartExpenseBuilding.map((property) => {\n  //   return property.date\n  // })  \n  // console.log('this is chartBuilding', chartBuilding)\n  // console.log('this is amount arr',amountIncomeArr)\n  // console.log('this is dates arr',datesIncomeArr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-style: italic w-full flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 23\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"WsoszUuDSZWgKITKUcvx0A5mSXs=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","TicketCard","Dashboard","listaTickets","setListaTickets","unSubscribe","data","docs","map","doc","id","uniqueBuildingsWithTickets","Set","property","chartIncomeBuilding","filter","ticket","type","amountIncomeArr","amount","uniqueBuilding","buildingIndex","filteredBuilding","_index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport TicketCard from \"../../Components/TicketCard\"\n// import Chart from \"../Chart\"\n\nconst Dashboard = () => {\n  const [listaTickets, setListaTickets] = useState([])\n  // const [buildingName, setBuildingName] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), (data) => {\n      setListaTickets(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n  \n const uniqueBuildingsWithTickets = [\n   ...new Set(listaTickets?.map(({property}) => property))\n  ]\n  // console.log('this is unique buildings' + uniqueBuildings)\n\n//   const handleChange = (e) => {\n//     const value = e.target.value\n\n//     setBuildingName(() => ({\n//         propertyName: value\n//     })\n//     )\n// }\n\n{<select name=\"jskjsk\" id=\"\"></select>}\n  // <select\n  //     name=\"buildingName\" \n  //     value={buildingName}\n  //     onChange={handleChange}\n\n  //     className=\"shadow appearance-none border rounded w-2/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n  //     >\n  //       <>\n  //       <>\n  //       <option disabled value={buildingName}> -- select an option -- </option>\n  //       </>\n  //       {listaTickets?.map((uniqueBuilding) => (\n  //       <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n  //       ))}\n  //       </>\n  //   </select> \n\n\n  const chartIncomeBuilding = listaTickets.filter(function(ticket){\n    return (ticket.property === 'San Cosme' && ticket.type === 'income')\n  })\n  \n  const amountIncomeArr = chartIncomeBuilding.map((property) => {\n    return property.amount\n  }) \n  \n  // const datesIncomeArr = chartIncomeBuilding.map((property) => {\n  //   return property.date\n  // })  \n\n  // const chartExpenseBuilding = listaTickets.filter(function(ticket){\n  //   return (ticket.property === 'San Cosme' && ticket.type === 'expense')\n  // })\n  \n  // const amountExpenseArr = chartExpenseBuilding.map((property) => {\n  //   return property.amount\n  // }) \n  \n  // const datesExpenseArr = chartExpenseBuilding.map((property) => {\n  //   return property.date\n  // })  \n  \n  // console.log('this is chartBuilding', chartBuilding)\n  // console.log('this is amount arr',amountIncomeArr)\n  // console.log('this is dates arr',datesIncomeArr)\n\n  return (\n    <div>\n\n   \n      \n    \n      {/* <Chart\n      incomeDates={datesIncomeArr}\n      incomeAmount={amountIncomeArr}\n      expenseDates={datesExpenseArr}\n      expenseAmount={amountExpenseArr}\n      buildingName={buildingName}\n      /> */}\n\n\n   <div className=\"font-style: italic w-full flex flex-wrap\">\n      <div className=\"w-2/4\">\n            <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n            <div className=\"\">\n              {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense')\n                    .map((filteredBuilding, _index) => (\n                      <TicketCard\n                      id={_index}\n                      data={filteredBuilding}\n                      />\n                      ))\n                    }\n                </div>\n              ))}\n            </div>\n      </div>\n        <div className=\"w-2/4\">\n          <h1 className=\"font-bold text-2xl text-center\">Ingresos</h1>\n          <div className=\"w-full\">\n              {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income')\n                    .map((filteredBuilding, _index) => (\n                      <TicketCard\n                      id={_index}\n                      data={filteredBuilding}\n                      />\n                      ))\n                    }\n                </div>\n              ))}\n            </div>\n        </div>\n    </div>\n              </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}