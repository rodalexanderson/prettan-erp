{"ast":null,"code":"import { db } from \"./firebase\";\nimport { collection, doc, getDocs, getDoc, addDoc, setDoc, updateDoc, deleteDoc, onSnapshot } from \"firebase/firestore\";\nexport const getDocRef = (col, id) => doc(db, col, id);\nexport const getCollectionRef = col => collection(db, col);\n\n// add data\nexport const addData = async (col, data) => {\n  const collectionRef = getCollectionRef(col);\n  const docRef = await addDoc(collectionRef, data);\n  return docRef;\n};\n\n//update data\nexport const updateData = async (col, id, data) => {\n  const docRef = getDocRef(col, id);\n  await updateDoc(docRef, data);\n};\n\n//get data\nexport const getData = async col => {\n  const collectionRef = getCollectionRef(col);\n  const snapData = await getDocs(collectionRef);\n  const data = snapData.map(doc => doc.data());\n  return data;\n};\n\n//get Data by ID\nexport const getDataById = async (col, id) => {\n  const docRef = getDocRef(col, id);\n  const snapData = await getDoc(docRef);\n  const data = snapData.data();\n  return data;\n};\n\n//delete data\nexport const deleteData = async (col, id) => {\n  const docRef = getDocRef(col, id);\n  await deleteDoc(docRef);\n};\n\n//delete field\n// export const deleteNumber = async (col, id) => {\n//   const docRef = getDocRef(col, id);\n//   await updateDoc(docRef, {subindex1: deleteField()})\n// }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//set Document\nexport const setDocument = async (col, id, data) => {\n  const docRef = getDocRef(col, id);\n  const docSnapshot = await setDoc(docRef, data);\n  return docSnapshot;\n};\n\n//subscribe to data\nexport const getSubscription = async (col, callback) => {\n  const collectionRef = getCollectionRef(col);\n  //const unsubscribe = onSnapshot(collectionRef, callback);\n  const unsubscribe = await onSnapshot(collectionRef, callback);\n  return unsubscribe;\n};","map":{"version":3,"names":["db","collection","doc","getDocs","getDoc","addDoc","setDoc","updateDoc","deleteDoc","onSnapshot","getDocRef","col","id","getCollectionRef","addData","data","collectionRef","docRef","updateData","getData","snapData","map","getDataById","deleteData","setDocument","docSnapshot","getSubscription","callback","unsubscribe"],"sources":["C:/Users/rodal/Desktop/pretta-erp/src/Services/CRUD.jsx"],"sourcesContent":["import { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDocs,\r\n  getDoc,\r\n  addDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\n\r\nexport const getDocRef = (col, id) => doc(db, col, id);\r\nexport const getCollectionRef = (col) => (collection(db, col));\r\n\r\n\r\n// add data\r\nexport const addData = async (col, data) => {\r\n  const collectionRef = getCollectionRef(col);\r\n  const docRef = await addDoc(collectionRef, data);\r\n  return docRef;\r\n}\r\n\r\n//update data\r\nexport const updateData = async (col, id, data) => {\r\n  const docRef = getDocRef(col, id);\r\n  await updateDoc(docRef, data);\r\n};\r\n\r\n//get data\r\nexport const getData = async (col) => {\r\n  const collectionRef = getCollectionRef(col);\r\n  const snapData = await getDocs(collectionRef);\r\n  const data = snapData.map((doc) => doc.data());\r\n  return data;\r\n};\r\n\r\n//get Data by ID\r\nexport const getDataById = async (col, id) => {\r\n  const docRef = getDocRef(col, id);\r\n  const snapData = await getDoc(docRef);\r\n  const data = snapData.data();\r\n  return data;\r\n};\r\n\r\n//delete data\r\nexport const deleteData = async (col, id) => {\r\n  const docRef = getDocRef(col, id);\r\n  await deleteDoc(docRef);\r\n};\r\n\r\n//delete field\r\n// export const deleteNumber = async (col, id) => {\r\n//   const docRef = getDocRef(col, id);\r\n//   await updateDoc(docRef, {subindex1: deleteField()})\r\n// }\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n//set Document\r\nexport const setDocument = async (col, id, data) => {\r\n  const docRef = getDocRef(col, id);\r\n  const docSnapshot = await setDoc(docRef, data);\r\n  return docSnapshot;\r\n};\r\n\r\n//subscribe to data\r\nexport const getSubscription = async (col, callback) => {\r\n  const collectionRef = getCollectionRef(col);\r\n  //const unsubscribe = onSnapshot(collectionRef, callback);\r\n  const unsubscribe = await onSnapshot(collectionRef, callback);\r\n  return unsubscribe;\r\n};\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SACEC,UAAU,EACVC,GAAG,EACHC,OAAO,EACPC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,UAAU,QACL,oBAAoB;AAE3B,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,EAAE,KAAKV,GAAG,CAACF,EAAE,EAAEW,GAAG,EAAEC,EAAE,CAAC;AACtD,OAAO,MAAMC,gBAAgB,GAAIF,GAAG,IAAMV,UAAU,CAACD,EAAE,EAAEW,GAAG,CAAE;;AAG9D;AACA,OAAO,MAAMG,OAAO,GAAG,MAAAA,CAAOH,GAAG,EAAEI,IAAI,KAAK;EAC1C,MAAMC,aAAa,GAAGH,gBAAgB,CAACF,GAAG,CAAC;EAC3C,MAAMM,MAAM,GAAG,MAAMZ,MAAM,CAACW,aAAa,EAAED,IAAI,CAAC;EAChD,OAAOE,MAAM;AACf,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOP,GAAG,EAAEC,EAAE,EAAEG,IAAI,KAAK;EACjD,MAAME,MAAM,GAAGP,SAAS,CAACC,GAAG,EAAEC,EAAE,CAAC;EACjC,MAAML,SAAS,CAACU,MAAM,EAAEF,IAAI,CAAC;AAC/B,CAAC;;AAED;AACA,OAAO,MAAMI,OAAO,GAAG,MAAOR,GAAG,IAAK;EACpC,MAAMK,aAAa,GAAGH,gBAAgB,CAACF,GAAG,CAAC;EAC3C,MAAMS,QAAQ,GAAG,MAAMjB,OAAO,CAACa,aAAa,CAAC;EAC7C,MAAMD,IAAI,GAAGK,QAAQ,CAACC,GAAG,CAAEnB,GAAG,IAAKA,GAAG,CAACa,IAAI,CAAC,CAAC,CAAC;EAC9C,OAAOA,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMO,WAAW,GAAG,MAAAA,CAAOX,GAAG,EAAEC,EAAE,KAAK;EAC5C,MAAMK,MAAM,GAAGP,SAAS,CAACC,GAAG,EAAEC,EAAE,CAAC;EACjC,MAAMQ,QAAQ,GAAG,MAAMhB,MAAM,CAACa,MAAM,CAAC;EACrC,MAAMF,IAAI,GAAGK,QAAQ,CAACL,IAAI,CAAC,CAAC;EAC5B,OAAOA,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOZ,GAAG,EAAEC,EAAE,KAAK;EAC3C,MAAMK,MAAM,GAAGP,SAAS,CAACC,GAAG,EAAEC,EAAE,CAAC;EACjC,MAAMJ,SAAS,CAACS,MAAM,CAAC;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAGA;;AAKA;AACA,OAAO,MAAMO,WAAW,GAAG,MAAAA,CAAOb,GAAG,EAAEC,EAAE,EAAEG,IAAI,KAAK;EAClD,MAAME,MAAM,GAAGP,SAAS,CAACC,GAAG,EAAEC,EAAE,CAAC;EACjC,MAAMa,WAAW,GAAG,MAAMnB,MAAM,CAACW,MAAM,EAAEF,IAAI,CAAC;EAC9C,OAAOU,WAAW;AACpB,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOf,GAAG,EAAEgB,QAAQ,KAAK;EACtD,MAAMX,aAAa,GAAGH,gBAAgB,CAACF,GAAG,CAAC;EAC3C;EACA,MAAMiB,WAAW,GAAG,MAAMnB,UAAU,CAACO,aAAa,EAAEW,QAAQ,CAAC;EAC7D,OAAOC,WAAW;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}