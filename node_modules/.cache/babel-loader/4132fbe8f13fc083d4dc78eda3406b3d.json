{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport TicketCard from \"../../Components/TicketCard\";\nimport Chart from \"../Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaTickets, setListaTickets] = useState([]);\n  const [buildingName, setBuildingName] = useState(\"\");\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaTickets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildings = [...new Set(listaTickets === null || listaTickets === void 0 ? void 0 : listaTickets.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setBuildingName(() => ({\n      propertyName: value\n    }));\n  };\n\n  console.log('lista Tickets', listaTickets);\n  const chartIncomeBuilding = listaTickets.filter(function (ticket) {\n    return ticket.property === 'San Cosme' && ticket.type === 'income';\n  });\n  const amounIncometArr = chartIncomeBuilding.map(property => {\n    return property.amount;\n  });\n  const datesIncomeArr = chartIncomeBuilding.map(property => {\n    return property.date;\n  });\n  const chartExpenseBuilding = listaTickets.filter(function (ticket) {\n    return ticket.property === 'San Cosme' && ticket.type === 'expense';\n  });\n  const amounExpensetArr = chartExpenseBuilding.map(property => {\n    return property.amount;\n  });\n  const datesExpenseArr = chartExpenseBuilding.map(property => {\n    return property.date;\n  }); // console.log('this is buildingName', buildingName)\n  // console.log('this is chartBuilding', chartBuilding)\n  // console.log('this is amount arr',amountArr)\n  // console.log('this is dates arr',datesArr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"buildingName\",\n      value: buildingName,\n      onChange: handleChange,\n      required: true,\n      defaultValue: 'disable-value',\n      className: \"shadow appearance-none border rounded w-2/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: 'disable-value',\n          children: \" -- select an option -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), listaTickets === null || listaTickets === void 0 ? void 0 : listaTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: uniqueBuilding.property\n        }, buildingIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      incomeDates: datesIncomeArr,\n      incomeAmount: amounIncometArr,\n      expenseDates: datesIncomeArr,\n      expenseAmount: amounIncometArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-style: italic w-full flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), listaTickets.filter(expense => expense.property === uniqueBuilding && expense.type === 'expense').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              expense: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), listaTickets.filter(expense => expense.property === uniqueBuilding && expense.type === 'income').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              color: filteredBuilding.color,\n              expense: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 23\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"RhhILRngkpZ04rAA3a2MPYGmc4w=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","TicketCard","Chart","Dashboard","listaTickets","setListaTickets","buildingName","setBuildingName","unSubscribe","data","docs","map","doc","id","uniqueBuildings","Set","property","handleChange","e","value","target","propertyName","console","log","chartIncomeBuilding","filter","ticket","type","amounIncometArr","amount","datesIncomeArr","date","chartExpenseBuilding","amounExpensetArr","datesExpenseArr","uniqueBuilding","buildingIndex","expense","filteredBuilding","_index","color"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport TicketCard from \"../../Components/TicketCard\"\nimport Chart from \"../Chart\"\n\nconst Dashboard = () => {\n  const [listaTickets, setListaTickets] = useState([])\n  const [buildingName, setBuildingName] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), (data) => {\n      setListaTickets(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n  \n const uniqueBuildings = [\n   ...new Set(listaTickets?.map(({property}) => property))\n  ]\n\n  const handleChange = (e) => {\n    const value = e.target.value\n\n    setBuildingName(() => ({\n        propertyName: value\n    })\n    )\n}\n\n  \n  console.log('lista Tickets',listaTickets)\n\n  const chartIncomeBuilding = listaTickets.filter(function(ticket){\n    return (ticket.property === 'San Cosme' && ticket.type === 'income')\n  })\n  \n  const amounIncometArr = chartIncomeBuilding.map((property) => {\n    return property.amount\n  }) \n  \n  const datesIncomeArr = chartIncomeBuilding.map((property) => {\n    return property.date\n  })  \n\n  const chartExpenseBuilding = listaTickets.filter(function(ticket){\n    return (ticket.property === 'San Cosme' && ticket.type === 'expense')\n  })\n  \n  const amounExpensetArr = chartExpenseBuilding.map((property) => {\n    return property.amount\n  }) \n  \n  const datesExpenseArr = chartExpenseBuilding.map((property) => {\n    return property.date\n  })  \n  \n\n\n\n  // console.log('this is buildingName', buildingName)\n  // console.log('this is chartBuilding', chartBuilding)\n  // console.log('this is amount arr',amountArr)\n  // console.log('this is dates arr',datesArr)\n\n  return (\n    <div>\n\n   \n      <select \n      name=\"buildingName\" \n      value={buildingName}\n      onChange={handleChange}\n      required={true}\n      defaultValue={'disable-value'}\n      className=\"shadow appearance-none border rounded w-2/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n      >\n        <>\n        <option disabled value={'disable-value'}> -- select an option -- </option>\n        {listaTickets?.map((uniqueBuilding, buildingIndex) => (\n        <option key={buildingIndex}>{uniqueBuilding.property}</option>\n        ))}\n        </>\n      </select>\n    \n    \n\n\n    <Chart\n    incomeDates={datesIncomeArr}\n    incomeAmount={amounIncometArr}\n    expenseDates={datesIncomeArr}\n    expenseAmount={amounIncometArr}\n    />\n\n\n   <div className=\"font-style: italic w-full flex flex-wrap\">\n      <div className=\"w-2/4\">\n            <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n            <div className=\"\">\n              {uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaTickets.filter(expense => expense.property === uniqueBuilding && expense.type === 'expense')\n                    .map((filteredBuilding, _index) => (\n                      <TicketCard\n                      id={_index}\n                      expense={filteredBuilding}\n                      />\n                      ))\n                    }\n                </div>\n              ))}\n            </div>\n      </div>\n        <div className=\"w-2/4\">\n          <h1 className=\"font-bold text-2xl text-center\">Ingresos</h1>\n          <div className=\"w-full\">\n              {uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaTickets.filter(expense => expense.property === uniqueBuilding && expense.type === 'income')\n                    .map((filteredBuilding, _index) => (\n                      <TicketCard\n                      id={_index}\n                      color={filteredBuilding.color}\n                      expense={filteredBuilding}\n                      />\n                      ))\n                    }\n                </div>\n              ))}\n            </div>\n        </div>\n    </div>\n              </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}