{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _objectSpread from\"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{onSnapshot}from\"firebase/firestore\";import{createContext,useState,useEffect}from\"react\";import{handleAuthChange}from\"../Services/authChange\";import{getDocRef}from\"../Services/CRUD\";import{jsx as _jsx}from\"react/jsx-runtime\";export var userContext=/*#__PURE__*/createContext();export var UserProvider=function UserProvider(_ref){var children=_ref.children;var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var suscribeToUser=function suscribeToUser(user){return onSnapshot(getDocRef(\"users\",user.uid),function(data){setUser(_objectSpread(_objectSpread({},user),data.data()));});};useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var unsuscribeFromUser,unsuscribe;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return handleAuthChange(function(user){if(user){unsuscribeFromUser=suscribeToUser(user);}else{setUser(null);if(unsuscribeFromUser)unsuscribeFromUser();}});case 2:unsuscribe=_context.sent;return _context.abrupt(\"return\",function(){unsuscribe();if(unsuscribeFromUser)unsuscribeFromUser();});case 4:case\"end\":return _context.stop();}}},_callee);})),[]);return/*#__PURE__*/_jsx(userContext.Provider,{value:user,children:children});};","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/context/userProvider.jsx"],"names":["onSnapshot","createContext","useState","useEffect","handleAuthChange","getDocRef","userContext","UserProvider","children","user","setUser","suscribeToUser","uid","data","unsuscribeFromUser","unsuscribe"],"mappings":"igBAAA,OAASA,UAAT,KAA2B,oBAA3B,CACA,OAASC,aAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,OAASC,SAAT,KAA0B,kBAA1B,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGL,aAAa,EAAjC,CAGP,MAAO,IAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CACzC,cAAwBN,QAAQ,EAAhC,wCAAOO,IAAP,eAAaC,OAAb,eAEC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,IAAD,QAAUT,CAAAA,UAAU,CAACK,SAAS,CAAC,OAAD,CAAUI,IAAI,CAACG,GAAf,CAAV,CAA+B,SAACC,IAAD,CAAU,CAChFH,OAAO,gCAAKD,IAAL,EAAcI,IAAI,CAACA,IAAL,EAAd,EAAP,CACH,CAF0C,CAApB,EAAvB,CAKAV,SAAS,sEAAE,2LAEeC,CAAAA,gBAAgB,CAAG,SAACK,IAAD,CAAQ,CAC/C,GAAIA,IAAJ,CAAS,CACXK,kBAAkB,CAAGH,cAAc,CAACF,IAAD,CAAnC,CACC,CAFC,IAEK,CACNC,OAAO,CAAC,IAAD,CAAP,CACE,GAAII,kBAAJ,CAAwBA,kBAAkB,GAC5C,CACJ,CAPyC,CAF/B,QAELC,UAFK,+CAUJ,UAAK,CACNA,UAAU,GACV,GAAID,kBAAJ,CAAwBA,kBAAkB,GAC/C,CAbU,wDAAF,GAcN,EAdM,CAAT,CAgBA,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEL,IAA7B,UACKD,QADL,EADJ,CAKH,CA7BM","sourcesContent":["import { onSnapshot } from \"firebase/firestore\";\nimport { createContext, useState, useEffect } from \"react\";\nimport { handleAuthChange } from \"../Services/authChange\";\nimport { getDocRef } from \"../Services/CRUD\";\n\nexport const userContext = createContext()\n\n\nexport const UserProvider = ({children}) => {\n   const [user, setUser] = useState();\n\n    const suscribeToUser = (user) => onSnapshot(getDocRef(\"users\", user.uid), (data) => {\n        setUser({...user, ...data.data()})\n    });\n\n\n    useEffect( async () => {\n     let  unsuscribeFromUser  \n    const unsuscribe = await  handleAuthChange ( (user)=>{\n          if (user){\n        unsuscribeFromUser = suscribeToUser(user)\n        } else {\n         setUser(null)\n           if (unsuscribeFromUser) unsuscribeFromUser()\n        }\n    });\n    return ()=> {\n          unsuscribe()\n          if (unsuscribeFromUser) unsuscribeFromUser()\n    };\n    }, []);\n\n    return (\n        <userContext.Provider value={user}>\n            {children}\n        </userContext.Provider>\n    )\n};"]},"metadata":{},"sourceType":"module"}