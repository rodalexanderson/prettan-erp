{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodal\\\\Desktop\\\\pretta-erp\\\\src\\\\Pages\\\\TicketPage\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport { userContext } from \"../../context/userProvider\";\nimport { addData, getData, getDataById, updateData } from \"../../Services/CRUD\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNextConsecutiveNumber = async () => {\n  const currentYear = new Date().getFullYear();\n  const tickets = await getData(\"tickets\");\n  const currentYearTickets = tickets.filter(ticket => ticket.timestamp && new Date(ticket.timestamp).getFullYear() === currentYear);\n  let maxNumber = 0;\n  if (currentYearTickets.length > 0) {\n    maxNumber = currentYearTickets.reduce((max, ticket) => {\n      if (ticket.ticketNumber) {\n        const ticketNumber = parseInt(ticket.ticketNumber.substring(4), 10);\n        return ticketNumber > max ? ticketNumber : max;\n      }\n      return max;\n    }, 0);\n  }\n  const nextNumber = maxNumber + 1;\n  const formattedNumber = nextNumber.toString().padStart(3, \"0\");\n  const ticketID = `${currentYear}${formattedNumber}`;\n  return ticketID;\n};\nconst TicketPage = ({\n  editMode\n}) => {\n  _s();\n  const user = useContext(userContext);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    timestamp: new Date().toISOString(),\n    ticketNumber: '',\n    // Nuevo campo para el número consecutivo\n    date: new Date().toISOString().split('T')[0] // Establecer la fecha actual\n  });\n  const [cantidadProducto, setCantidadProducto] = useState('');\n  const [nombreProducto, setNombreProducto] = useState('');\n  const [precioProducto, setPrecioProducto] = useState('');\n  const [objetoEnviado, setObjetoEnviado] = useState([]);\n  const [products, setProducts] = useState([]);\n  let {\n    id\n  } = useParams();\n\n  // Obtener el próximo número consecutivo al montar el componente\n  useEffect(() => {\n    const fetchNextTicketID = async () => {\n      const nextID = await getNextConsecutiveNumber();\n      setFormData(prevState => ({\n        ...prevState,\n        ticketNumber: nextID\n      }));\n    };\n    fetchNextTicketID();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!editMode) {\n      await addData(\"tickets\", {\n        ticketNumber: formData.ticketNumber,\n        clientName: formData.clientName,\n        amount: formData.amount,\n        category: formData.category,\n        timestamp: formData.timestamp,\n        date: formData.date,\n        // Establecer la fecha actual al enviar el formulario\n        uid: user.uid,\n        objetoEnviado: objetoEnviado,\n        type: 'expense'\n      });\n      navigate(\"/\");\n    }\n    if (editMode) {\n      await updateData(\"tickets\", id, {\n        ticketNumber: formData.ticketNumber,\n        clientName: formData.clientName,\n        amount: formData.amount,\n        category: formData.category,\n        timestamp: formData.timestamp,\n        date: formData.date,\n        uid: user.uid,\n        objetoEnviado: objetoEnviado,\n        type: 'expense'\n      });\n      navigate('/');\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      if (editMode) {\n        const response = await getDataById(\"tickets\", id);\n        console.log(\"Datos obtenidos de Firestore en editMode:\", response);\n        setFormData({\n          ticketNumber: response.ticketNumber,\n          clientName: response.clientName,\n          amount: response.amount,\n          category: response.category,\n          timestamp: response.timestamp,\n          date: response.date,\n          uid: user.uid,\n          objetoEnviado: response.objetoEnviado || [],\n          type: 'expense'\n        });\n        setObjetoEnviado(response.objetoEnviado || []); // Actualizar el estado de objetoEnviado\n      }\n    };\n    fetchData();\n  }, [editMode, id, user.uid]);\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Agrega productos a un array\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(getCollectionRef('products'), data => {\n      setProducts(data.docs.map(doc => {\n        return {\n          ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    const selectedProduct = products.find(product => product.name === nombreProducto);\n    if (selectedProduct) {\n      setPrecioProducto(selectedProduct.price.toString());\n    } else {\n      setPrecioProducto('');\n    }\n  }, [nombreProducto, products]);\n  const handleAddProduct = e => {\n    e.preventDefault();\n    const selectedProduct = products.find(product => product.name === nombreProducto);\n    const listaDeProductos = {\n      cantidadProducto,\n      nombreProducto,\n      precioProducto: selectedProduct ? selectedProduct.price : ''\n    };\n    const totalAmount = objetoEnviado.reduce((acc, obj) => {\n      return acc + Number(obj.cantidadProducto || 0) * Number(obj.precioProducto || 0);\n    }, 0) + Number(listaDeProductos.cantidadProducto || 0) * Number(listaDeProductos.precioProducto || 0);\n    setFormData(prevState => ({\n      ...prevState,\n      amount: totalAmount.toString()\n    }));\n    setObjetoEnviado([...objetoEnviado, listaDeProductos]);\n    setCantidadProducto('');\n    setNombreProducto('');\n    setPrecioProducto('');\n  };\n  const handleDeleteLastProduct = e => {\n    e.preventDefault();\n\n    // Verificar si hay productos para eliminar\n    if (objetoEnviado.length > 0) {\n      const updatedProducts = [...objetoEnviado];\n      updatedProducts.pop(); // Eliminar el último producto del array\n\n      setObjetoEnviado(updatedProducts); // Actualizar el estado con el array modificado\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center align-middle items-center mx-auto \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-black text-center flex justify-center align-middle items-center mx-auto text-2xl font-semibold mt-4\",\n      children: editMode ? 'Actualiza la remision' : 'Crear una remision'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mx-auto  w-full sm:w-4/5 items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"bg-white shadow-md rounded px-8 pt-6 pb-8 m-4 w-3/4\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex flex-col flex-wrap w-3/4 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            value: formData.category,\n            onChange: handleChange,\n            required: true,\n            defaultValue: 'disable-value',\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 'disable-value',\n              disabled: true,\n              children: \" -- Selecciona una opcion -- \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nutricionales\",\n              children: \"Remision Nutricionales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cosmeticos\",\n              children: \"Remision Cosmeticos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"otros\",\n              children: \"Otros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clientName\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Nombre del Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"clientName\",\n            name: \"clientName\",\n            type: \"text\",\n            onChange: handleChange,\n            required: true,\n            value: formData.clientName,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cantidad\",\n              children: \"Cantidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: cantidadProducto,\n              onChange: e => setCantidadProducto(e.target.value),\n              placeholder: \"Cantidad\",\n              className: \"border w-1/4 m-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"producto\",\n              children: \"Nombre del Producto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: nombreProducto,\n              onChange: e => setNombreProducto(e.target.value),\n              placeholder: \"Campo 2\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccione un producto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this), products.map((product, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: product.name,\n                children: product.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"precio\",\n              children: \"Precio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: precioProducto,\n              onChange: e => setPrecioProducto(e.target.value),\n              className: \"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              readOnly: true // Evita la modificación directa del campo 3 por el usuario\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddProduct,\n              className: \"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-8 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\",\n              children: \"Agregar Productos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteLastProduct,\n              className: \"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-8 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\",\n              children: \"Eliminar el ultimo producto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: objetoEnviado.map((objeto, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"------------------------\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Producto \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this), Object.entries(objeto).map(([key, value], i) => {\n                let displayedKey = '';\n                switch (key) {\n                  case 'cantidadProducto':\n                    displayedKey = 'Cantidad';\n                    break;\n                  case 'nombreProducto':\n                    displayedKey = 'Nombre';\n                    break;\n                  case 'precioProducto':\n                    displayedKey = 'Precio';\n                    break;\n                  default:\n                    displayedKey = key;\n                    break;\n                }\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [displayedKey, \": \", value]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Total acumulado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"amount\",\n            name: \"amount\",\n            type: \"text\",\n            onChange: handleChange,\n            required: true,\n            value: formData.amount,\n            readOnly: true,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: \"Enviar\",\n            type: \"submit\",\n            className: \"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n_s(TicketPage, \"t5mKVYktVTyhboN0E37QJEHh1+s=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = TicketPage;\nexport default TicketPage;\nvar _c;\n$RefreshReg$(_c, \"TicketPage\");","map":{"version":3,"names":["useState","useEffect","useContext","onSnapshot","getCollectionRef","userContext","addData","getData","getDataById","updateData","useNavigate","useParams","jsxDEV","_jsxDEV","getNextConsecutiveNumber","currentYear","Date","getFullYear","tickets","currentYearTickets","filter","ticket","timestamp","maxNumber","length","reduce","max","ticketNumber","parseInt","substring","nextNumber","formattedNumber","toString","padStart","ticketID","TicketPage","editMode","_s","user","navigate","formData","setFormData","toISOString","date","split","cantidadProducto","setCantidadProducto","nombreProducto","setNombreProducto","precioProducto","setPrecioProducto","objetoEnviado","setObjetoEnviado","products","setProducts","id","fetchNextTicketID","nextID","prevState","handleSubmit","e","preventDefault","clientName","amount","category","uid","type","fetchData","response","console","log","handleChange","value","target","name","unsubscribe","data","docs","map","doc","selectedProduct","find","product","price","handleAddProduct","listaDeProductos","totalAmount","acc","obj","Number","handleDeleteLastProduct","updatedProducts","pop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","defaultValue","disabled","placeholder","index","readOnly","onClick","objeto","Object","entries","key","i","displayedKey","_c","$RefreshReg$"],"sources":["C:/Users/rodal/Desktop/pretta-erp/src/Pages/TicketPage/index.jsx"],"sourcesContent":["import { useState, useEffect, useContext} from \"react\"\r\nimport { onSnapshot } from \"firebase/firestore\"\r\nimport { getCollectionRef } from \"../../Services/CRUD\"\r\nimport { userContext } from \"../../context/userProvider\"\r\nimport { addData, getData, getDataById, updateData } from \"../../Services/CRUD\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst getNextConsecutiveNumber = async () => {\r\n    const currentYear = new Date().getFullYear();\r\n  \r\n    const tickets = await getData(\"tickets\");\r\n  \r\n    const currentYearTickets = tickets.filter(\r\n      (ticket) =>\r\n        ticket.timestamp && new Date(ticket.timestamp).getFullYear() === currentYear\r\n    );\r\n  \r\n    let maxNumber = 0;\r\n    if (currentYearTickets.length > 0) {\r\n      maxNumber = currentYearTickets.reduce((max, ticket) => {\r\n        if (ticket.ticketNumber) {\r\n          const ticketNumber = parseInt(ticket.ticketNumber.substring(4), 10);\r\n          return ticketNumber > max ? ticketNumber : max;\r\n        }\r\n        return max;\r\n      }, 0);\r\n    }\r\n  \r\n    const nextNumber = maxNumber + 1;\r\n    const formattedNumber = nextNumber.toString().padStart(3, \"0\");\r\n    const ticketID = `${currentYear}${formattedNumber}`;\r\n  \r\n    return ticketID;\r\n  };\r\n  \r\n  \r\n\r\n\r\n\r\nconst TicketPage = ({editMode}) => {\r\n    const user = useContext(userContext)\r\n    const navigate = useNavigate()\r\n    const [formData, setFormData] = useState({\r\n        timestamp: new Date().toISOString(),\r\n        ticketNumber: '', // Nuevo campo para el número consecutivo\r\n        date: new Date().toISOString().split('T')[0], // Establecer la fecha actual\r\n    })\r\n    const [cantidadProducto, setCantidadProducto] = useState('');\r\n    const [nombreProducto, setNombreProducto] = useState('');\r\n    const [precioProducto, setPrecioProducto] = useState('');\r\n    const [objetoEnviado, setObjetoEnviado] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    let {id} = useParams()\r\n    \r\n    // Obtener el próximo número consecutivo al montar el componente\r\n        useEffect(() => {\r\n            const fetchNextTicketID = async () => {\r\n                const nextID = await getNextConsecutiveNumber();\r\n                setFormData((prevState) => ({ ...prevState, ticketNumber: nextID }));\r\n              };\r\n              \r\n\r\n            fetchNextTicketID();\r\n        }, []);\r\n\r\n        const handleSubmit = async (e) => {\r\n            e.preventDefault();\r\n            if (!editMode) {\r\n                await addData(\"tickets\", {\r\n                  ticketNumber: formData.ticketNumber,\r\n                  clientName: formData.clientName,\r\n                  amount: formData.amount,\r\n                  category: formData.category,\r\n                  timestamp: formData.timestamp,\r\n                  date: formData.date, // Establecer la fecha actual al enviar el formulario\r\n                  uid: user.uid,\r\n                  objetoEnviado: objetoEnviado,\r\n                  type: 'expense',\r\n                });\r\n                navigate(\"/\");\r\n              }\r\n        if (editMode){\r\n            await updateData(\"tickets\", id, {\r\n                ticketNumber: formData.ticketNumber,\r\n                clientName: formData.clientName,\r\n                amount: formData.amount,\r\n                category: formData.category,\r\n                timestamp: formData.timestamp,\r\n                date: formData.date,\r\n                uid: user.uid,\r\n                objetoEnviado: objetoEnviado,\r\n                type: 'expense',\r\n            })\r\n            navigate('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          if (editMode) {\r\n            const response = await getDataById(\"tickets\", id);\r\n            console.log(\"Datos obtenidos de Firestore en editMode:\", response);\r\n            setFormData({\r\n              ticketNumber: response.ticketNumber,\r\n              clientName: response.clientName,\r\n              amount: response.amount,\r\n              category: response.category,\r\n              timestamp: response.timestamp,\r\n              date: response.date,\r\n              uid: user.uid,\r\n              objetoEnviado: response.objetoEnviado || [],\r\n              type: 'expense',\r\n            });\r\n            setObjetoEnviado(response.objetoEnviado || []); // Actualizar el estado de objetoEnviado\r\n          }\r\n        };\r\n      \r\n        fetchData();\r\n      }, [editMode, id, user.uid]);\r\n      \r\n      \r\n      \r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n    \r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    // Agrega productos a un array\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onSnapshot(getCollectionRef('products'), (data) => {\r\n          setProducts(\r\n            data.docs.map((doc) => {\r\n              return { ...doc.data(), id: doc.id };\r\n            })\r\n          );\r\n        });\r\n    \r\n        return () => {\r\n          unsubscribe();\r\n        };\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        const selectedProduct = products.find((product) => product.name === nombreProducto);\r\n        if (selectedProduct) {\r\n          setPrecioProducto(selectedProduct.price.toString());\r\n        } else {\r\n          setPrecioProducto('');\r\n        }\r\n      }, [nombreProducto, products]);\r\n\r\n      const handleAddProduct = (e) => {\r\n        e.preventDefault();\r\n        const selectedProduct = products.find((product) => product.name === nombreProducto);\r\n        const listaDeProductos = {\r\n          cantidadProducto,\r\n          nombreProducto,\r\n          precioProducto: selectedProduct ? selectedProduct.price : '',\r\n        };\r\n      \r\n        const totalAmount =\r\n          objetoEnviado.reduce((acc, obj) => {\r\n            return acc + Number(obj.cantidadProducto || 0) * Number(obj.precioProducto || 0);\r\n          }, 0) +\r\n          Number(listaDeProductos.cantidadProducto || 0) * Number(listaDeProductos.precioProducto || 0);\r\n      \r\n        setFormData((prevState) => ({\r\n          ...prevState,\r\n          amount: totalAmount.toString(),\r\n        }));\r\n      \r\n        setObjetoEnviado([...objetoEnviado, listaDeProductos]);\r\n        setCantidadProducto('');\r\n        setNombreProducto('');\r\n        setPrecioProducto('');\r\n      };\r\n      \r\n      const handleDeleteLastProduct = (e) => {\r\n        e.preventDefault();\r\n      \r\n        // Verificar si hay productos para eliminar\r\n        if (objetoEnviado.length > 0) {\r\n          const updatedProducts = [...objetoEnviado];\r\n          updatedProducts.pop(); // Eliminar el último producto del array\r\n      \r\n          setObjetoEnviado(updatedProducts); // Actualizar el estado con el array modificado\r\n        }\r\n      };\r\n      \r\n      \r\n    return (\r\n        <div className=\"flex flex-col justify-center align-middle items-center mx-auto \">\r\n            <h1 className=\"text-black text-center flex justify-center align-middle items-center mx-auto text-2xl font-semibold mt-4\">{editMode ? 'Actualiza la remision' : 'Crear una remision'}</h1>\r\n            <div className=\"flex flex-col mx-auto  w-full sm:w-4/5 items-center\">\r\n                <form onSubmit={handleSubmit} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 m-4 w-3/4\">\r\n                    <section className=\"flex flex-col flex-wrap w-3/4 mx-auto\">\r\n                      \r\n                            <label htmlFor=\"category\"className=\"block text-gray-700 text-sm font-bold mb-2\">Categoria</label>\r\n                            <select \r\n                                name=\"category\"\r\n                                value={formData.category}\r\n                                onChange={handleChange}\r\n                                required={true}\r\n                                defaultValue={'disable-value'}\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                >\r\n                                <option value={'disable-value'} disabled> -- Selecciona una opcion -- </option>\r\n                                <option value=\"nutricionales\">Remision Nutricionales</option>\r\n                                <option value=\"cosmeticos\" >Remision Cosmeticos</option>\r\n                                <option value=\"otros\" >Otros</option>\r\n                            </select>\r\n                            <label htmlFor=\"clientName\" className=\"block text-gray-700 text-sm font-bold mb-2\">Nombre del Cliente</label>\r\n                            <input \r\n                            id=\"clientName\"\r\n                            name=\"clientName\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            required={true}\r\n                            value={formData.clientName}\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            />\r\n                            \r\n                                <div>\r\n                                    <label htmlFor=\"cantidad\">Cantidad</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={cantidadProducto}\r\n                                        onChange={(e) => setCantidadProducto(e.target.value)}\r\n                                        placeholder=\"Cantidad\"\r\n                                        className=\"border w-1/4 m-2\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"producto\">Nombre del Producto</label>\r\n                                    <select\r\n                                    value={nombreProducto}\r\n                                    onChange={(e) => setNombreProducto(e.target.value)}\r\n                                    placeholder=\"Campo 2\"\r\n                                    >\r\n                                    <option value=\"\">Seleccione un producto</option>\r\n                                    {products.map((product, index) => (\r\n                                        <option key={index} value={product.name}>\r\n                                        {product.name}\r\n                                        </option>\r\n                                    ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"precio\">Precio</label>\r\n                                    <input\r\n                                    type=\"text\"\r\n                                    value={precioProducto}\r\n                                    onChange={(e) => setPrecioProducto(e.target.value)}\r\n                                    className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                    readOnly // Evita la modificación directa del campo 3 por el usuario\r\n                                    />\r\n                                </div>\r\n                            <div className=\"flex\">\r\n                                <button onClick={handleAddProduct} className=\"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-8 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\">Agregar Productos</button>\r\n                                <button onClick={handleDeleteLastProduct} className=\"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-8 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\">Eliminar el ultimo producto</button> \r\n                            </div>\r\n                            <div>\r\n                            {objetoEnviado.map((objeto, index) => (\r\n                                <div key={index}>\r\n                                    <p>------------------------</p>\r\n                                    <p>Producto {index + 1}:</p>\r\n                                    {Object.entries(objeto).map(([key, value], i) => {\r\n                                        let displayedKey = '';\r\n                                        switch (key) {\r\n                                            case 'cantidadProducto':\r\n                                                displayedKey = 'Cantidad';\r\n                                                break;\r\n                                            case 'nombreProducto':\r\n                                                displayedKey = 'Nombre';\r\n                                                break;\r\n                                            case 'precioProducto':\r\n                                                displayedKey = 'Precio';\r\n                                                break;\r\n                                            default:\r\n                                                displayedKey = key;\r\n                                                break;\r\n                                        }\r\n                                        return (\r\n                                            <p key={i}>{displayedKey}: {value}</p>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            ))}\r\n\r\n                            </div>\r\n                            <label htmlFor=\"amount\" className=\"block text-gray-700 text-sm font-bold mb-2\">Total acumulado</label>\r\n                            <input\r\n                            id=\"amount\"\r\n                            name=\"amount\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            required={true}\r\n                            value={formData.amount}\r\n                            readOnly\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            />\r\n\r\n\r\n                        <input value=\"Enviar\" type=\"submit\" className=\"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\" />\r\n                    </section>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default TicketPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}