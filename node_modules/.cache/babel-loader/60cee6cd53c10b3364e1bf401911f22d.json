{"ast":null,"code":"var _jsxFileName = \"/Users/efecto10/Desktop/FIrebase Config To HomePage/src/Components/Profile/ProfileFav/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { userContext } from \"../../../context/userProvider\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../../Services/CRUD\";\nimport { ReactComponent as Heart } from \"../../../multimedia/SVG/solid.svg\";\nimport { ReactComponent as Empty } from \"../../../multimedia/SVG/empty.svg\";\nimport { ReactComponent as Bin } from \"../../../multimedia/SVG/bin.svg\";\nimport { handleLike } from \"../../../Functions\";\nimport { handleDelete } from \"../../../Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileFavourites = _ref => {\n  _s();\n\n  let {\n    setShowProfile,\n    setShowPosts,\n    setShowFavorites\n  } = _ref;\n  const [listaTweets, setListaTweets] = useState([]);\n  const {\n    uid,\n    color,\n    nameUser,\n    userLikes\n  } = useContext(userContext);\n  const dateTweet = new Date().toLocaleDateString();\n  useEffect(() => {\n    const unSuscribe = onSnapshot(getCollectionRef(\"tweets\"), data => {\n      setListaTweets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSuscribe();\n    };\n  }, []);\n\n  const handleInProfile = () => {\n    setShowProfile(true);\n    setShowFavorites(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-tweet-list\",\n    children: listaTweets.map(tweet => {\n      return tweet.userLikes == uid && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: uid === tweet.uid ? handleInProfile : null,\n          className: \"image-profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-name-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: tweet.photo,\n              className: \"photo-profile\",\n              alt: \"profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-name\",\n                style: {\n                  backgroundColor: color\n                },\n                children: tweet.nameUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date\",\n                children: [\"-\", dateTweet]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this), uid === tweet.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"trush-svg\",\n              title: \"Borrar tweet\",\n              onClick: () => handleDelete(tweet.id),\n              children: /*#__PURE__*/_jsxDEV(Bin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-post\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tweet.tweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"likes-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"like-svg\",\n              onClick: () => {\n                handleLike({\n                  tweet\n                }, uid);\n              },\n              children: tweet.userLikes.includes(uid) ? /*#__PURE__*/_jsxDEV(Heart, {\n                className: \"like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n                className: \"unlike\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: tweet.userLikes.includes(uid) ? \"favorite\" : \"\",\n              children: tweet.likes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)]\n      }, tweet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this)\n  /********TEMINA USER-POSTS ***********/\n  ;\n};\n\n_s(ProfileFavourites, \"n3nRrYnwekYlHVUpnB1G8iDaWdI=\");\n\n_c = ProfileFavourites;\nexport default ProfileFavourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileFavourites\");","map":{"version":3,"sources":["/Users/efecto10/Desktop/FIrebase Config To HomePage/src/Components/Profile/ProfileFav/index.jsx"],"names":["useEffect","useState","useContext","userContext","onSnapshot","getCollectionRef","ReactComponent","Heart","Empty","Bin","handleLike","handleDelete","ProfileFavourites","setShowProfile","setShowPosts","setShowFavorites","listaTweets","setListaTweets","uid","color","nameUser","userLikes","dateTweet","Date","toLocaleDateString","unSuscribe","data","docs","map","doc","id","handleInProfile","tweet","photo","backgroundColor","includes","likes"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { userContext } from \"../../../context/userProvider\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../../Services/CRUD\";\nimport { ReactComponent as Heart } from \"../../../multimedia/SVG/solid.svg\";\nimport { ReactComponent as Empty } from \"../../../multimedia/SVG/empty.svg\";\nimport { ReactComponent as Bin } from \"../../../multimedia/SVG/bin.svg\";\nimport { handleLike } from \"../../../Functions\";\nimport { handleDelete } from \"../../../Functions\";\n\nconst ProfileFavourites = ({\n    setShowProfile,\n    setShowPosts,\n    setShowFavorites,\n}) => {\n    const [listaTweets, setListaTweets] = useState([]);\n    const { uid, color, nameUser, userLikes } = useContext(userContext);\n    const dateTweet = new Date().toLocaleDateString();\n  \n    useEffect(() => {\n      const unSuscribe = onSnapshot(getCollectionRef(\"tweets\"), (data) => {\n        setListaTweets(\n          data.docs.map((doc) => {\n            return { ...doc.data(), id: doc.id };\n          })\n        );\n      });\n      return () => {\n        unSuscribe();\n      };\n    }, []);\n\n    const handleInProfile = () => {\n      setShowProfile(true);\n      setShowFavorites(false);\n    };\n\n    return (\n        \n      <div className=\"container-tweet-list\">\n    {/********EMPIEZA USER-POSTS ***********/}\n\n        {listaTweets.map((tweet) => {\n          return (\n            tweet.userLikes == uid && (\n                <div className=\"tweet-container\" key={tweet.id}>\n                  <div\n                    onClick={uid === tweet.uid ? handleInProfile : null}\n                    className=\"image-profile\"\n                  >\n                  </div>\n                  <div className=\"post-info\">\n                    <div className=\"user-name-date\">\n                    <img\n                        src={tweet.photo}\n                        className=\"photo-profile\"\n                        alt=\"profile\"\n                      />\n                      <div className=\"flex-row\">\n                      \n                        <div\n                          className=\"user-name\"\n                          style={{ backgroundColor: color }}\n                        >\n                          {tweet.nameUser}\n                        </div>\n                        <p className=\"date\">-{dateTweet}</p>\n                      </div>\n                      {uid === tweet.uid && (\n                        <button\n                          className=\"trush-svg\"\n                          title=\"Borrar tweet\"\n                          onClick={() => handleDelete(tweet.id)}\n                        >\n                          <Bin />\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"tweet-post\">\n                      <p>{tweet.tweet}</p>\n                    </div>\n                    <div className=\"likes-container\">\n                      <button\n                        className=\"like-svg\"\n                        onClick={() => {\n                          handleLike({ tweet }, uid);\n                        }}\n                      >\n                        {tweet.userLikes.includes(uid) ? (\n                          <Heart className=\"like\" />\n                        ) : (\n                          <Empty className=\"unlike\" />\n                        )}\n                      </button>\n                      <p\n                        className={tweet.userLikes.includes(uid) ? \"favorite\" : \"\"}\n                      >\n                        {tweet.likes}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )\n          );\n        })}\n\n      \n       \n       \n        \n      </div>\n      /********TEMINA USER-POSTS ***********/\n    );\n  };\n\nexport default ProfileFavourites;"]},"metadata":{},"sourceType":"module"}