{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport TicketCard from \"../../Components/TicketCard\"; // import Chart from \"../Chart\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaTickets, setListaTickets] = useState([]);\n  const [propertyList, setPropertyList] = useState([]);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [propertySelected, setPropertySelected] = useState(\"\");\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaTickets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"properties\"), data => {\n      setPropertyList(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildingsWithTickets = [...new Set(listaTickets === null || listaTickets === void 0 ? void 0 : listaTickets.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))]; // <select\n  //     name=\"buildingName\" \n  //     value={buildingName}\n  //     onChange={handleChange}\n  //     className=\"shadow appearance-none border rounded w-2/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n  //     >\n  //       <>\n  //       <>\n  //       <option disabled value={buildingName}> -- select an option -- </option>\n  //       </>\n  //       {listaTickets?.map((uniqueBuilding) => (\n  //       <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n  //       ))}\n  //       </>\n  //   </select> \n  // const chartIncomeBuilding = listaTickets.filter(function(ticket){\n  //   return (ticket.property === 'San Cosme' && ticket.type === 'income')\n  // })\n  // const amountIncomeArr = chartIncomeBuilding.map((property) => {\n  //   return property.amount\n  // }) \n  // const datesIncomeArr = chartIncomeBuilding.map((property) => {\n  //   return property.date\n  // })  \n  // const chartExpenseBuilding = listaTickets.filter(function(ticket){\n  //   return (ticket.property === 'San Cosme' && ticket.type === 'expense')\n  // })\n  // const amountExpenseArr = chartExpenseBuilding.map((property) => {\n  //   return property.amount\n  // }) \n  // const datesExpenseArr = chartExpenseBuilding.map((property) => {\n  //   return property.date\n  // })  \n  // console.log('this is chartBuilding', chartBuilding)\n  // console.log('this is amount arr',amountIncomeArr)\n  // console.log('this is dates arr',datesIncomeArr)\n  // console.log('from date ' + fromDate)\n  // console.log('to date ' + toDate)\n  // console.log('property selected ' + propertySelected)\n  // console.log('this is unique buildings with tickets' + uniqueBuildingsWithTickets)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Filtro por fechas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-around\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fromDate\",\n            className: \"block text-gray-700 text-sm font-bold mb-2 text-zxl\",\n            children: \"Desde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fromDate\",\n            name: \"fromDate\",\n            type: \"date\",\n            onChange: e => setFromDate(e.target.value),\n            value: fromDate,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toDate\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Hasta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"toDate\",\n            name: \"toDate\",\n            type: \"date\",\n            onChange: e => setToDate(e.target.value),\n            value: toDate,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Filtro por Propiedad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"property\",\n          value: propertySelected,\n          onChange: e => setPropertySelected(e.target.value),\n          defaultValue: 'disable-value',\n          className: \"shadow appearance-none border rounded w-1/3 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: 'disable-value',\n              children: \" -- selecciona una opcion -- \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 43\n            }, this), propertyList === null || propertyList === void 0 ? void 0 : propertyList.map(uniqueBuilding => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: uniqueBuilding.property\n            }, uniqueBuilding.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 43\n            }, this))]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-style: italic w-full flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 23\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 27\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 23\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 27\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"ZFqXNiafculvY39wBa3VU4gzpK8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","TicketCard","Dashboard","listaTickets","setListaTickets","propertyList","setPropertyList","fromDate","setFromDate","toDate","setToDate","propertySelected","setPropertySelected","unSubscribe","data","docs","map","doc","id","uniqueBuildingsWithTickets","Set","property","e","target","value","uniqueBuilding","buildingIndex","filter","type","filteredBuilding","_index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport TicketCard from \"../../Components/TicketCard\"\n// import Chart from \"../Chart\"\n\nconst Dashboard = () => {\n  const [listaTickets, setListaTickets] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [fromDate, setFromDate] = useState(\"\")\n  const [toDate, setToDate] = useState(\"\")\n  const [propertySelected, setPropertySelected] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), (data) => {\n      setListaTickets(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"properties\"), (data) => {\n      setPropertyList(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n   }, [])\n  \n const uniqueBuildingsWithTickets = [\n   ...new Set(listaTickets?.map(({property}) => property ))\n  ]\n\n  \n  // <select\n  //     name=\"buildingName\" \n  //     value={buildingName}\n  //     onChange={handleChange}\n\n  //     className=\"shadow appearance-none border rounded w-2/4 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n  //     >\n  //       <>\n  //       <>\n  //       <option disabled value={buildingName}> -- select an option -- </option>\n  //       </>\n  //       {listaTickets?.map((uniqueBuilding) => (\n  //       <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n  //       ))}\n  //       </>\n  //   </select> \n  \n  \n  // const chartIncomeBuilding = listaTickets.filter(function(ticket){\n    //   return (ticket.property === 'San Cosme' && ticket.type === 'income')\n    // })\n    \n    // const amountIncomeArr = chartIncomeBuilding.map((property) => {\n      //   return property.amount\n      // }) \n      \n      // const datesIncomeArr = chartIncomeBuilding.map((property) => {\n        //   return property.date\n        // })  \n        \n        // const chartExpenseBuilding = listaTickets.filter(function(ticket){\n          //   return (ticket.property === 'San Cosme' && ticket.type === 'expense')\n          // })\n          \n          // const amountExpenseArr = chartExpenseBuilding.map((property) => {\n            //   return property.amount\n            // }) \n            \n            // const datesExpenseArr = chartExpenseBuilding.map((property) => {\n              //   return property.date\n              // })  \n              \n              // console.log('this is chartBuilding', chartBuilding)\n              // console.log('this is amount arr',amountIncomeArr)\n              // console.log('this is dates arr',datesIncomeArr)\n              // console.log('from date ' + fromDate)\n              // console.log('to date ' + toDate)\n              // console.log('property selected ' + propertySelected)\n              // console.log('this is unique buildings with tickets' + uniqueBuildingsWithTickets)\n\n  return (\n    <div>\n          <div>\n            <h2 className=\"text-center\">Filtro por fechas</h2>\n            <div className=\"flex justify-around\">\n            <div>\n            <label htmlFor=\"fromDate\" className=\"block text-gray-700 text-sm font-bold mb-2 text-zxl\">Desde</label>\n                                  <input \n                                  id=\"fromDate\"\n                                  name=\"fromDate\"\n                                  type=\"date\"\n                                  onChange={e => setFromDate(e.target.value)}\n                                  value={fromDate}\n                                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                  />\n            </div>\n            <div>\n            <label htmlFor=\"toDate\" className=\"block text-gray-700 text-sm font-bold mb-2\">Hasta</label>\n                                  <input \n                                  id=\"toDate\"\n                                  name=\"toDate\"\n                                  type=\"date\"\n                                  onChange={e => setToDate(e.target.value)}\n                                  value={toDate}\n                                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                  />\n            </div>\n            </div>\n            <div className=\"flex justify-center\">\n              <h2 className=\"text-center\">Filtro por Propiedad</h2>\n              <select \n                                      name=\"property\"\n                                      value={propertySelected}\n                                      onChange={e => setPropertySelected(e.target.value)}\n                                      defaultValue={'disable-value'}\n                                      className=\"shadow appearance-none border rounded w-1/3 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                      >\n                                          <>\n                                          <option disabled value={'disable-value'}> -- selecciona una opcion -- </option>\n                                          {propertyList?.map((uniqueBuilding) => (\n                                          <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n                                              ))}\n                                          </>\n                                          \n              </select>\n              </div> \n            </div> \n      {/* <Chart\n      incomeDates={datesIncomeArr}\n      incomeAmount={amountIncomeArr}\n      expenseDates={datesExpenseArr}\n      expenseAmount={amountExpenseArr}\n      buildingName={buildingName}\n      /> */}\n\n      <div className=\"font-style: italic w-full flex flex-wrap\">\n          <div className=\"w-2/4\">\n                <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n                <div className=\"\">\n                  {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                    <div key={buildingIndex}>\n                      <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                        {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense')\n                        .map((filteredBuilding, _index) => (\n                          <TicketCard\n                          id={_index}\n                          data={filteredBuilding}\n                          />\n                          ))\n                        }\n                    </div>\n                  ))}\n                </div>\n          </div>\n            <div className=\"w-2/4\">\n              <h1 className=\"font-bold text-2xl text-center\">Ingresos</h1>\n              <div className=\"w-full\">\n                  {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                    <div key={buildingIndex}>\n                      <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                        {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income')\n                        .map((filteredBuilding, _index) => (\n                          <TicketCard\n                          id={_index}\n                          data={filteredBuilding}\n                          />\n                          ))\n                        }\n                    </div>\n                  ))}\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}