{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\rodal\\\\Desktop\\\\ibarraHirasako\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"C:\\\\Users\\\\rodal\\\\Desktop\\\\ibarraHirasako\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{createContext,useState,useEffect}from\"react\";import{onSnapshot}from\"firebase/firestore\";import{handleAuthChange}from\"../Services/authChange\";import{getDocRef}from\"../Services/CRUD\";import{jsx as _jsx}from\"react/jsx-runtime\";export var userContext=/*#__PURE__*/createContext();export var UserProvider=function UserProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),unsubscribeUser=_useState4[0],setUnsubscribeUser=_useState4[1];useEffect(function(){var unsubscribeAuth=null;var subscribeToUser=function subscribeToUser(userData){if(unsubscribeUser){unsubscribeUser();}var unsubscribe=onSnapshot(getDocRef(\"users\",userData.uid),function(data){setUser(_objectSpread(_objectSpread({},userData),data.data()));});setUnsubscribeUser(function(){return unsubscribe;});};unsubscribeAuth=handleAuthChange(function(userData){if(userData){subscribeToUser(userData);}else{setUser(null);if(unsubscribeUser){unsubscribeUser();}}});return function(){if(unsubscribeAuth){unsubscribeAuth();}if(unsubscribeUser){unsubscribeUser();}};},[]);// La dependencia del efecto ahora es un arreglo vacío para que se ejecute solo una vez\nreturn/*#__PURE__*/_jsx(userContext.Provider,{value:user,children:children});};","map":{"version":3,"sources":["C:/Users/rodal/Desktop/ibarraHirasako/src/context/userProvider.jsx"],"names":["createContext","useState","useEffect","onSnapshot","handleAuthChange","getDocRef","userContext","UserProvider","children","user","setUser","unsubscribeUser","setUnsubscribeUser","unsubscribeAuth","subscribeToUser","userData","unsubscribe","uid","data"],"mappings":"yQAAA,OAASA,aAAT,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,OAASC,SAAT,KAA0B,kBAA1B,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGN,aAAa,EAAjC,CAEP,MAAO,IAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC5C,cAAwBP,QAAQ,CAAC,IAAD,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eACA,eAA8CT,QAAQ,CAAC,IAAD,CAAtD,yCAAOU,eAAP,eAAwBC,kBAAxB,eAEAV,SAAS,CAAC,UAAM,CACd,GAAIW,CAAAA,eAAe,CAAG,IAAtB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,CAAc,CACpC,GAAIJ,eAAJ,CAAqB,CACnBA,eAAe,GAChB,CACD,GAAMK,CAAAA,WAAW,CAAGb,UAAU,CAACE,SAAS,CAAC,OAAD,CAAUU,QAAQ,CAACE,GAAnB,CAAV,CAAmC,SAACC,IAAD,CAAU,CACzER,OAAO,gCAAMK,QAAN,EAAmBG,IAAI,CAACA,IAAL,EAAnB,EAAP,CACD,CAF6B,CAA9B,CAGAN,kBAAkB,CAAC,iBAAMI,CAAAA,WAAN,EAAD,CAAlB,CACD,CARD,CAUAH,eAAe,CAAGT,gBAAgB,CAAC,SAACW,QAAD,CAAc,CAC/C,GAAIA,QAAJ,CAAc,CACZD,eAAe,CAACC,QAAD,CAAf,CACD,CAFD,IAEO,CACLL,OAAO,CAAC,IAAD,CAAP,CACA,GAAIC,eAAJ,CAAqB,CACnBA,eAAe,GAChB,CACF,CACF,CATiC,CAAlC,CAWA,MAAO,WAAM,CACX,GAAIE,eAAJ,CAAqB,CACnBA,eAAe,GAChB,CACD,GAAIF,eAAJ,CAAqB,CACnBA,eAAe,GAChB,CACF,CAPD,CAQD,CAhCQ,CAgCN,EAhCM,CAAT,CAgCQ;AAER,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEF,IAA7B,UACGD,QADH,EADF,CAKD,CA3CM","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { onSnapshot } from \"firebase/firestore\";\r\nimport { handleAuthChange } from \"../Services/authChange\";\r\nimport { getDocRef } from \"../Services/CRUD\";\r\n\r\nexport const userContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [unsubscribeUser, setUnsubscribeUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let unsubscribeAuth = null;\r\n\r\n    const subscribeToUser = (userData) => {\r\n      if (unsubscribeUser) {\r\n        unsubscribeUser();\r\n      }\r\n      const unsubscribe = onSnapshot(getDocRef(\"users\", userData.uid), (data) => {\r\n        setUser({ ...userData, ...data.data() });\r\n      });\r\n      setUnsubscribeUser(() => unsubscribe);\r\n    };\r\n\r\n    unsubscribeAuth = handleAuthChange((userData) => {\r\n      if (userData) {\r\n        subscribeToUser(userData);\r\n      } else {\r\n        setUser(null);\r\n        if (unsubscribeUser) {\r\n          unsubscribeUser();\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (unsubscribeAuth) {\r\n        unsubscribeAuth();\r\n      }\r\n      if (unsubscribeUser) {\r\n        unsubscribeUser();\r\n      }\r\n    };\r\n  }, []); // La dependencia del efecto ahora es un arreglo vacío para que se ejecute solo una vez\r\n\r\n  return (\r\n    <userContext.Provider value={user}>\r\n      {children}\r\n    </userContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}