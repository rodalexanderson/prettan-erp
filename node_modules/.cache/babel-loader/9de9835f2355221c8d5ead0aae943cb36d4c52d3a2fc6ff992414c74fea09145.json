{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodal\\\\Desktop\\\\pretta-erp\\\\src\\\\Pages\\\\IncomePage\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport { userContext } from \"../../context/userProvider\";\nimport { addData, getData, getDataById, updateData } from \"../../Services/CRUD\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNextConsecutiveNumber = async () => {\n  const currentYear = new Date().getFullYear();\n  const tickets = await getData(\"tickets\");\n  const currentYearTickets = tickets.filter(ticket => ticket.timestamp && new Date(ticket.timestamp).getFullYear() === currentYear);\n  let maxNumber = 0;\n  if (currentYearTickets.length > 0) {\n    maxNumber = currentYearTickets.reduce((max, ticket) => {\n      if (ticket.ticketNumber) {\n        const ticketNumber = parseInt(ticket.ticketNumber.substring(4), 10);\n        return ticketNumber > max ? ticketNumber : max;\n      }\n      return max;\n    }, 0);\n  }\n  const nextNumber = maxNumber + 1;\n  const formattedNumber = nextNumber.toString().padStart(3, \"0\");\n  const ticketID = `${currentYear}${formattedNumber}`;\n  return ticketID;\n};\nconst IncomePage = ({\n  editMode\n}) => {\n  _s();\n  const user = useContext(userContext);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [formData, setFormData] = useState({\n    timestamp: new Date().toISOString(),\n    ticketNumber: '',\n    date: new Date().toISOString().split('T')[0],\n    clientName: '',\n    amount: ''\n  });\n\n  // Obtener el próximo número consecutivo al montar el componente\n  useEffect(() => {\n    const fetchNextTicketID = async () => {\n      const nextID = await getNextConsecutiveNumber();\n      setFormData(prevState => ({\n        ...prevState,\n        ticketNumber: nextID\n      }));\n    };\n    fetchNextTicketID();\n  }, []);\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"clientes\"), data => {\n      setListaClientes(data.docs.map(doc => {\n        return {\n          ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!editMode) {\n      await addData(\"tickets\", {\n        ticketNumber: formData.ticketNumber,\n        clientName: formData.clientName,\n        amount: formData.amount,\n        timestamp: formData.timestamp,\n        date: formData.date,\n        // Establecer la fecha actual al enviar el formulario\n        uid: user.uid,\n        type: 'income'\n      });\n      navigate(\"/\");\n    }\n    if (editMode) {\n      await updateData(\"tickets\", id, {\n        ticketNumber: formData.ticketNumber,\n        clientName: formData.clientName,\n        amount: formData.amount,\n        timestamp: formData.timestamp,\n        date: formData.date,\n        uid: user.uid,\n        type: 'income'\n      });\n      navigate('/');\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      if (editMode) {\n        const response = await getDataById(\"tickets\", id);\n        setFormData({\n          ...response // Asegúrate de que los campos coincidan con los valores esperados\n        });\n      }\n    };\n    fetchData();\n  }, [editMode, id]);\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center align-middle items-center mx-auto w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-black text-center flex justify-center align-middle items-center mx-auto text-2xl font-semibold mt-8\",\n      children: editMode ? 'Actualiza la remisión' : 'Crear una remisión'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mx-auto w-full sm:w-3/4 xl:w-4/12 items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"bg-white shadow-md rounded pt-6 pb-8 w-full sm:w-3/4 xl:w-4/12\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex flex-col flex-wrap w-3/4 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"clientName\",\n            className: \"block text-gray-700 text-sm font-bold mt-2\",\n            children: \"Nombre del Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"clientName\",\n            value: formData.clientName,\n            onChange: handleChange,\n            required: true,\n            defaultValue: 'disable-value',\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 bg-white leading-tight focus:outline-none focus:shadow-outline mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 'disable-value',\n              disabled: true,\n              children: \"-- Selecciona un cliente --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), listaClientes.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cliente.name,\n              children: cliente.name\n            }, cliente.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              className: \"block text-gray-700 text-sm font-bold my-3 \",\n              children: \"Monto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"amount\",\n              name: \"amount\",\n              type: \"text\",\n              onChange: handleChange,\n              required: true,\n              value: formData.amount,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: editMode ? 'Actualizar' : 'Enviar',\n            className: \"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n};\n_s(IncomePage, \"oKRuOhwvpe5nsMNAiVMNYH1oNIM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = IncomePage;\nexport default IncomePage;\nvar _c;\n$RefreshReg$(_c, \"IncomePage\");","map":{"version":3,"names":["useState","useEffect","useContext","onSnapshot","getCollectionRef","userContext","addData","getData","getDataById","updateData","useNavigate","useParams","jsxDEV","_jsxDEV","getNextConsecutiveNumber","currentYear","Date","getFullYear","tickets","currentYearTickets","filter","ticket","timestamp","maxNumber","length","reduce","max","ticketNumber","parseInt","substring","nextNumber","formattedNumber","toString","padStart","ticketID","IncomePage","editMode","_s","user","navigate","id","formData","setFormData","toISOString","date","split","clientName","amount","fetchNextTicketID","nextID","prevState","unSubscribe","data","setListaClientes","docs","map","doc","handleSubmit","e","preventDefault","uid","type","fetchData","response","handleChange","value","target","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","defaultValue","disabled","listaClientes","cliente","_c","$RefreshReg$"],"sources":["C:/Users/rodal/Desktop/pretta-erp/src/Pages/IncomePage/index.jsx"],"sourcesContent":["import { useState, useEffect, useContext} from \"react\"\r\nimport { onSnapshot } from \"firebase/firestore\"\r\nimport { getCollectionRef } from \"../../Services/CRUD\"\r\nimport { userContext } from \"../../context/userProvider\"\r\nimport { addData, getData, getDataById, updateData } from \"../../Services/CRUD\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst getNextConsecutiveNumber = async () => {\r\n    const currentYear = new Date().getFullYear();\r\n  \r\n    const tickets = await getData(\"tickets\");\r\n  \r\n    const currentYearTickets = tickets.filter(\r\n      (ticket) =>\r\n        ticket.timestamp && new Date(ticket.timestamp).getFullYear() === currentYear\r\n    );\r\n  \r\n    let maxNumber = 0;\r\n    if (currentYearTickets.length > 0) {\r\n      maxNumber = currentYearTickets.reduce((max, ticket) => {\r\n        if (ticket.ticketNumber) {\r\n          const ticketNumber = parseInt(ticket.ticketNumber.substring(4), 10);\r\n          return ticketNumber > max ? ticketNumber : max;\r\n        }\r\n        return max;\r\n      }, 0);\r\n    }\r\n  \r\n    const nextNumber = maxNumber + 1;\r\n    const formattedNumber = nextNumber.toString().padStart(3, \"0\");\r\n    const ticketID = `${currentYear}${formattedNumber}`;\r\n  \r\n    return ticketID;\r\n  };\r\n  \r\n  const IncomePage = ({ editMode }) => {\r\n    const user = useContext(userContext);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n  \r\n    const [formData, setFormData] = useState({\r\n      timestamp: new Date().toISOString(),\r\n      ticketNumber: '',\r\n      date: new Date().toISOString().split('T')[0],\r\n      clientName: '',\r\n      amount: ''\r\n    });\r\n    \r\n    // Obtener el próximo número consecutivo al montar el componente\r\n              useEffect(() => {\r\n                const fetchNextTicketID = async () => {\r\n                const nextID = await getNextConsecutiveNumber();\r\n                setFormData((prevState) => ({ ...prevState, ticketNumber: nextID }));\r\n              };\r\n              \r\n\r\n              fetchNextTicketID();\r\n            }, []);\r\n\r\n            useEffect(() => {\r\n              const unSubscribe = onSnapshot(getCollectionRef(\"clientes\"), (data) => {\r\n                setListaClientes(\r\n                  data.docs.map((doc) => {\r\n                    return { ...doc.data(), id: doc.id };\r\n                  })\r\n                );\r\n              });\r\n          \r\n              return () => {\r\n                unSubscribe();\r\n              };\r\n            }, []);\r\n\r\n        const handleSubmit = async (e) => {\r\n            e.preventDefault();\r\n            if (!editMode) {\r\n                await addData(\"tickets\", {\r\n                  ticketNumber: formData.ticketNumber,\r\n                  clientName: formData.clientName,\r\n                  amount: formData.amount,\r\n                  timestamp: formData.timestamp,\r\n                  date: formData.date, // Establecer la fecha actual al enviar el formulario\r\n                  uid: user.uid,\r\n                  type: 'income',\r\n                });\r\n                navigate(\"/\");\r\n              }\r\n        if (editMode){\r\n            await updateData(\"tickets\", id, {\r\n                ticketNumber: formData.ticketNumber,\r\n                clientName: formData.clientName,\r\n                amount: formData.amount,\r\n                timestamp: formData.timestamp,\r\n                date: formData.date,\r\n                uid: user.uid,\r\n                type: 'income',\r\n            })\r\n            navigate('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        if (editMode) {\r\n          const response = await getDataById(\"tickets\", id);\r\n          setFormData({\r\n            ...response // Asegúrate de que los campos coincidan con los valores esperados\r\n          });\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, [editMode, id]);\r\n  \r\n    const handleChange = (e) => {\r\n      const value = e.target.value;\r\n      const name = e.target.name;\r\n  \r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        [name]: value\r\n      }));\r\n    };\r\n\r\n\r\n      \r\n\r\n      \r\n    return (\r\n      <div className=\"flex flex-col justify-center align-middle items-center mx-auto w-full\">\r\n      <h1 className=\"text-black text-center flex justify-center align-middle items-center mx-auto text-2xl font-semibold mt-8\">\r\n        {editMode ? 'Actualiza la remisión' : 'Crear una remisión'}\r\n      </h1>\r\n      <div className=\"flex flex-col mx-auto w-full sm:w-3/4 xl:w-4/12 items-center\">\r\n        <form onSubmit={handleSubmit} className=\"bg-white shadow-md rounded pt-6 pb-8 w-full sm:w-3/4 xl:w-4/12\">\r\n          <section className=\"flex flex-col flex-wrap w-3/4 mx-auto\">\r\n          <label htmlFor=\"clientName\" className=\"block text-gray-700 text-sm font-bold mt-2\">\r\n              Nombre del Cliente\r\n            </label>\r\n            <select\r\n              name=\"clientName\"\r\n              value={formData.clientName}\r\n              onChange={handleChange}\r\n              required={true}\r\n              defaultValue={'disable-value'}\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 bg-white leading-tight focus:outline-none focus:shadow-outline mt-2\"\r\n            >\r\n              <option value={'disable-value'} disabled>\r\n                -- Selecciona un cliente --\r\n              </option>\r\n              {/* Iterar y mostrar opciones */}\r\n              {listaClientes.map((cliente) => (\r\n                <option key={cliente.id} value={cliente.name}>\r\n                  {cliente.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n                            <div>\r\n                                <label htmlFor=\"amount\" className=\"block text-gray-700 text-sm font-bold my-3 \">Monto</label>\r\n                                <input\r\n                                id=\"amount\"\r\n                                name=\"amount\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                required={true}\r\n                                value={formData.amount}\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                />\r\n                            </div>\r\n\r\n                        <input\r\n                        type=\"submit\"\r\n                        value={editMode ? 'Actualizar' : 'Enviar'}\r\n                        className=\"bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline cursor-pointer mt-9\"\r\n                        />\r\n\r\n                    </section>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default IncomePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}