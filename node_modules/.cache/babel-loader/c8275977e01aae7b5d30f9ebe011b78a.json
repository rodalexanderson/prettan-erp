{"ast":null,"code":"import { db } from \"./firebase\";\nimport { collection, doc, getDocs, getDoc, addDoc, setDoc, updateDoc, deleteDoc, onSnapshot } from \"firebase/firestore\";\nexport const getDocRef = (col, id) => doc(db, col, id);\nexport const getCollectionRef = col => collection(db, col); // add data\n\nexport const addData = async (col, data) => {\n  const collectionRef = getCollectionRef(col);\n  const docRef = await addDoc(collectionRef, data);\n  return docRef;\n}; //update data\n\nexport const updateData = async (col, id, data) => {\n  const docRef = getDocRef(col, id);\n  await updateDoc(docRef, data);\n}; //get data\n\nexport const getData = async col => {\n  const collectionRef = getCollectionRef(col);\n  const snapData = await getDocs(collectionRef);\n  const data = snapData.map(doc => doc.data());\n  return data;\n}; //get Data by ID\n\nexport const getDataById = async (col, id) => {\n  const docRef = getDocRef(col, id);\n  const snapData = await getDoc(docRef);\n  const data = snapData.data();\n  return data;\n}; //delete data\n\nexport const deleteData = async (col, id) => {\n  const docRef = getDocRef(col, id);\n  await deleteDoc(docRef);\n}; //delete field\n// export const deleteNumber = async (col, id) => {\n//   const docRef = getDocRef(col, id);\n//   await updateDoc(docRef, {subindex1: deleteField()})\n// }\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//set Document\n\nexport const setDocument = async (col, id, data) => {\n  const docRef = getDocRef(col, id);\n  const docSnapshot = await setDoc(docRef, data);\n  return docSnapshot;\n}; //subscribe to data\n\nexport const getSubscription = async (col, callback) => {\n  const collectionRef = getCollectionRef(col); //const unsubscribe = onSnapshot(collectionRef, callback);\n\n  const unsubscribe = await onSnapshot(collectionRef, callback);\n  return unsubscribe;\n};","map":{"version":3,"sources":["C:/Users/rodal/Desktop/ibarraHirasako/src/Services/CRUD.jsx"],"names":["db","collection","doc","getDocs","getDoc","addDoc","setDoc","updateDoc","deleteDoc","onSnapshot","getDocRef","col","id","getCollectionRef","addData","data","collectionRef","docRef","updateData","getData","snapData","map","getDataById","deleteData","setDocument","docSnapshot","getSubscription","callback","unsubscribe"],"mappings":"AAAA,SAASA,EAAT,QAAmB,YAAnB;AACA,SACEC,UADF,EAEEC,GAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,SARF,EASEC,UATF,QAUO,oBAVP;AAYA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,EAAN,KAAaV,GAAG,CAACF,EAAD,EAAKW,GAAL,EAAUC,EAAV,CAAlC;AACP,OAAO,MAAMC,gBAAgB,GAAIF,GAAD,IAAUV,UAAU,CAACD,EAAD,EAAKW,GAAL,CAA7C,C,CAGP;;AACA,OAAO,MAAMG,OAAO,GAAG,OAAOH,GAAP,EAAYI,IAAZ,KAAqB;AAC1C,QAAMC,aAAa,GAAGH,gBAAgB,CAACF,GAAD,CAAtC;AACA,QAAMM,MAAM,GAAG,MAAMZ,MAAM,CAACW,aAAD,EAAgBD,IAAhB,CAA3B;AACA,SAAOE,MAAP;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMC,UAAU,GAAG,OAAOP,GAAP,EAAYC,EAAZ,EAAgBG,IAAhB,KAAyB;AACjD,QAAME,MAAM,GAAGP,SAAS,CAACC,GAAD,EAAMC,EAAN,CAAxB;AACA,QAAML,SAAS,CAACU,MAAD,EAASF,IAAT,CAAf;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMI,OAAO,GAAG,MAAOR,GAAP,IAAe;AACpC,QAAMK,aAAa,GAAGH,gBAAgB,CAACF,GAAD,CAAtC;AACA,QAAMS,QAAQ,GAAG,MAAMjB,OAAO,CAACa,aAAD,CAA9B;AACA,QAAMD,IAAI,GAAGK,QAAQ,CAACC,GAAT,CAAcnB,GAAD,IAASA,GAAG,CAACa,IAAJ,EAAtB,CAAb;AACA,SAAOA,IAAP;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMO,WAAW,GAAG,OAAOX,GAAP,EAAYC,EAAZ,KAAmB;AAC5C,QAAMK,MAAM,GAAGP,SAAS,CAACC,GAAD,EAAMC,EAAN,CAAxB;AACA,QAAMQ,QAAQ,GAAG,MAAMhB,MAAM,CAACa,MAAD,CAA7B;AACA,QAAMF,IAAI,GAAGK,QAAQ,CAACL,IAAT,EAAb;AACA,SAAOA,IAAP;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMQ,UAAU,GAAG,OAAOZ,GAAP,EAAYC,EAAZ,KAAmB;AAC3C,QAAMK,MAAM,GAAGP,SAAS,CAACC,GAAD,EAAMC,EAAN,CAAxB;AACA,QAAMJ,SAAS,CAACS,MAAD,CAAf;AACD,CAHM,C,CAKP;AACA;AACA;AACA;AACA;AAGA;AAKA;;AACA,OAAO,MAAMO,WAAW,GAAG,OAAOb,GAAP,EAAYC,EAAZ,EAAgBG,IAAhB,KAAyB;AAClD,QAAME,MAAM,GAAGP,SAAS,CAACC,GAAD,EAAMC,EAAN,CAAxB;AACA,QAAMa,WAAW,GAAG,MAAMnB,MAAM,CAACW,MAAD,EAASF,IAAT,CAAhC;AACA,SAAOU,WAAP;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMC,eAAe,GAAG,OAAOf,GAAP,EAAYgB,QAAZ,KAAyB;AACtD,QAAMX,aAAa,GAAGH,gBAAgB,CAACF,GAAD,CAAtC,CADsD,CAEtD;;AACA,QAAMiB,WAAW,GAAG,MAAMnB,UAAU,CAACO,aAAD,EAAgBW,QAAhB,CAApC;AACA,SAAOC,WAAP;AACD,CALM","sourcesContent":["import { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDocs,\r\n  getDoc,\r\n  addDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\n\r\nexport const getDocRef = (col, id) => doc(db, col, id);\r\nexport const getCollectionRef = (col) => (collection(db, col));\r\n\r\n\r\n// add data\r\nexport const addData = async (col, data) => {\r\n  const collectionRef = getCollectionRef(col);\r\n  const docRef = await addDoc(collectionRef, data);\r\n  return docRef;\r\n}\r\n\r\n//update data\r\nexport const updateData = async (col, id, data) => {\r\n  const docRef = getDocRef(col, id);\r\n  await updateDoc(docRef, data);\r\n};\r\n\r\n//get data\r\nexport const getData = async (col) => {\r\n  const collectionRef = getCollectionRef(col);\r\n  const snapData = await getDocs(collectionRef);\r\n  const data = snapData.map((doc) => doc.data());\r\n  return data;\r\n};\r\n\r\n//get Data by ID\r\nexport const getDataById = async (col, id) => {\r\n  const docRef = getDocRef(col, id);\r\n  const snapData = await getDoc(docRef);\r\n  const data = snapData.data();\r\n  return data;\r\n};\r\n\r\n//delete data\r\nexport const deleteData = async (col, id) => {\r\n  const docRef = getDocRef(col, id);\r\n  await deleteDoc(docRef);\r\n};\r\n\r\n//delete field\r\n// export const deleteNumber = async (col, id) => {\r\n//   const docRef = getDocRef(col, id);\r\n//   await updateDoc(docRef, {subindex1: deleteField()})\r\n// }\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n//set Document\r\nexport const setDocument = async (col, id, data) => {\r\n  const docRef = getDocRef(col, id);\r\n  const docSnapshot = await setDoc(docRef, data);\r\n  return docSnapshot;\r\n};\r\n\r\n//subscribe to data\r\nexport const getSubscription = async (col, callback) => {\r\n  const collectionRef = getCollectionRef(col);\r\n  //const unsubscribe = onSnapshot(collectionRef, callback);\r\n  const unsubscribe = await onSnapshot(collectionRef, callback);\r\n  return unsubscribe;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}