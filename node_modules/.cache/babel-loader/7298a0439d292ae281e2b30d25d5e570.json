{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport TicketCard from \"../../Components/TicketCard\";\nimport FinanceCard from \"../../Components/FinanceCard\"; // import Chart from \"../Chart\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaTickets, setListaTickets] = useState([]);\n  const [propertyList, setPropertyList] = useState([]);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\"); // const [propertySelected, setPropertySelected] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaTickets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"properties\"), data => {\n      setPropertyList(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildingsWithTickets = [...new Set(listaTickets === null || listaTickets === void 0 ? void 0 : listaTickets.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n  const incomeTypeTickets = listaTickets.filter(data => data.type === 'income');\n  const incomeTypeTicketsString = incomeTypeTickets.map(data => data.amount);\n  const incomeTypeTicketsAmount = incomeTypeTicketsString.forEach;\n  let sum = 0;\n\n  for (let i = 0; i < incomeTypeTicketsAmount.length; i++) {\n    sum += incomeTypeTicketsAmount[i];\n  }\n\n  console.log(incomeTypeTickets);\n  console.log('incomeTypeTicketsAmount' + incomeTypeTicketsAmount);\n  console.log(parseInt(sum));\n  const expenseTypeTickets = listaTickets.filter(data => data.type === 'expense');\n  console.log(expenseTypeTickets);\n\n  const filterReset = () => {\n    setFromDate(\"\");\n    setToDate(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-evenly\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-2xl\",\n        children: \"Filtro por fechas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-around\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fromDate\",\n            className: \"block text-gray-700 text-sm font-bold mb-2 text-2xl\",\n            children: \"Desde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fromDate\",\n            name: \"fromDate\",\n            type: \"date\",\n            onChange: e => setFromDate(e.target.value),\n            value: fromDate,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toDate\",\n            className: \"block text-gray-700 text-sm font-bold mb-2 text-2xl\",\n            children: \"Hasta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"toDate\",\n            name: \"toDate\",\n            type: \"date\",\n            onChange: e => setToDate(e.target.value),\n            value: toDate,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => filterReset(),\n        children: \"Quitar Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-style: italic w-full flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense' && (fromDate && toDate ? data.date >= fromDate && data.date <= toDate : data.date)).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 27\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 23\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income' && (fromDate && toDate ? data.date >= fromDate && data.date <= toDate : data.date)).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 27\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Resumen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), fromDate && toDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Desde \", fromDate, \" hasta \", toDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 31\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ingreso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Egreso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Comision por Administracion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"UUSLhPgzIx4YZW6i+TgPTDgunRc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","TicketCard","FinanceCard","Dashboard","listaTickets","setListaTickets","propertyList","setPropertyList","fromDate","setFromDate","toDate","setToDate","unSubscribe","data","docs","map","doc","id","uniqueBuildingsWithTickets","Set","property","incomeTypeTickets","filter","type","incomeTypeTicketsString","amount","incomeTypeTicketsAmount","forEach","sum","i","length","console","log","parseInt","expenseTypeTickets","filterReset","e","target","value","uniqueBuilding","buildingIndex","date","filteredBuilding","_index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport TicketCard from \"../../Components/TicketCard\"\nimport FinanceCard from \"../../Components/FinanceCard\"\n// import Chart from \"../Chart\"\n\nconst Dashboard = () => {\n  const [listaTickets, setListaTickets] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [fromDate, setFromDate] = useState(\"\")\n  const [toDate, setToDate] = useState(\"\")\n  // const [propertySelected, setPropertySelected] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot((getCollectionRef(\"tickets\")), (data) => {\n      setListaTickets(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"properties\"), (data) => {\n      setPropertyList(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n   }, [])\n  \n const uniqueBuildingsWithTickets = [\n   ...new Set(listaTickets?.map((({property}) => property) ))\n  ]\n\n  const incomeTypeTickets = listaTickets.filter(data => data.type === 'income')\n  const incomeTypeTicketsString = incomeTypeTickets.map(data => data.amount)\n  const incomeTypeTicketsAmount = incomeTypeTicketsString.forEach\n  let sum = 0\n  for (let i = 0; i < incomeTypeTicketsAmount.length; i++) {\n    sum += incomeTypeTicketsAmount[i];\n}\n  console.log(incomeTypeTickets)\n  console.log('incomeTypeTicketsAmount' + incomeTypeTicketsAmount)\n  console.log(parseInt(sum))\n\n  const expenseTypeTickets = listaTickets.filter(data => data.type === 'expense')\n  console.log(expenseTypeTickets)\n  \n  const filterReset = () => {\n      setFromDate(\"\")\n      setToDate(\"\")\n    }\n\n  return (\n    <div>\n          <div className=\"flex flex-row justify-evenly\">\n            <h2 className=\"text-center text-2xl\">Filtro por fechas</h2>\n            <div className=\"flex justify-around\">\n            <div className=\"flex flex-col justify-center\">\n                <label htmlFor=\"fromDate\" className=\"block text-gray-700 text-sm font-bold mb-2 text-2xl\">Desde</label>\n                                  <input \n                                  id=\"fromDate\"\n                                  name=\"fromDate\"\n                                  type=\"date\"\n                                  onChange={e => setFromDate(e.target.value)}\n                                  value={fromDate}\n                                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                  />\n            </div>\n            <div>\n                <label htmlFor=\"toDate\" className=\"block text-gray-700 text-sm font-bold mb-2 text-2xl\">Hasta</label>\n                                  <input \n                                  id=\"toDate\"\n                                  name=\"toDate\"\n                                  type=\"date\"\n                                  onChange={e => setToDate(e.target.value)}\n                                  value={toDate}\n                                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                  />\n            </div>\n            </div>\n            <button onClick={() => filterReset()}>Quitar Filtros</button>\n            {/* <div className=\"flex justify-center\">\n              <h2 className=\"text-center text-2xl\">Filtro por Propiedad</h2>\n              <select \n                                      name=\"property\"\n                                      value={propertySelected}\n                                      onChange={e => setPropertySelected(e.target.value)}\n                                      defaultValue={'disable-value'}\n                                      className=\"shadow appearance-none border rounded w-1/3 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                      >\n                                          <>\n                                          <option value={'disable-value'}> -- selecciona una opcion -- </option>\n                                          {propertyList?.map((uniqueBuilding) => (\n                                          <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n                                              ))}\n                                          </>\n                                          \n              </select>\n              </div>  */}\n            </div> \n\n      <div className=\"font-style: italic w-full flex flex-wrap\">\n          <div className=\"w-2/4\">\n                <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n                <div className=\"\">\n                  {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                    <div key={buildingIndex}>\n                      <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                        {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense' && \n                        ( fromDate && toDate ?\n                        (data.date >= fromDate && data.date <= toDate) : data.date))\n                        .map((filteredBuilding, _index) => (\n                          <TicketCard\n                          id={_index}\n                          data={filteredBuilding}\n                          />\n                          ))\n                        }\n                    </div>\n                  ))}\n                </div>\n          </div>\n            <div className=\"w-2/4\">\n              <h1 className=\"font-bold text-2xl text-center\">Ingresos</h1>\n              <div className=\"w-full\">\n                  {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                    <div key={buildingIndex}>\n                      <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                        {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income' && \n                        ( fromDate && toDate ?\n                        (data.date >= fromDate && data.date <= toDate) : data.date) )\n                        .map((filteredBuilding, _index) => (\n                          <TicketCard\n                          id={_index}\n                          data={filteredBuilding}\n                          />\n                          ))\n                        }\n                    </div>\n                  ))}\n                </div>\n            </div>\n      </div>\n      <div>\n        <p>Resumen</p>\n        {fromDate && toDate ? <p>Desde {fromDate} hasta {toDate}</p> : \"\" }\n        <div>\n        <p>Ingreso</p>\n    \n        <p>Egreso</p>\n        <p>Comision por Administracion</p>\n        </div>\n      \n      </div>\n    </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}