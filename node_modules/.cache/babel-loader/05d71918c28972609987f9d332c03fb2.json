{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport TicketCard from \"../../Components/TicketCard\";\nimport FinanceCard from \"../../Components/FinanceCard\"; // import Chart from \"../Chart\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaTickets, setListaTickets] = useState([]);\n  const [propertyList, setPropertyList] = useState([]);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\"); // const [propertySelected, setPropertySelected] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaTickets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"properties\"), data => {\n      setPropertyList(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildingsWithTickets = [...new Set(listaTickets === null || listaTickets === void 0 ? void 0 : listaTickets.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))]; // THIS PART WILL CHANGE INCOME TICKET AMOUNT ARRAY STRING TO INTERGER\n\n  const incomeTypeTicketsAmount = [];\n  const incomeTypeTickets = listaTickets.filter(data => data.type === 'income' && data.date >= fromDate && data.date <= toDate);\n  const incomeTypeTicketsString = incomeTypeTickets.map(data => data.amount);\n  incomeTypeTicketsString.forEach(str => {\n    incomeTypeTicketsAmount.push(Number(str));\n  });\n  let incomeSum = 0;\n\n  for (let i = 0; i < incomeTypeTicketsAmount.length; i++) {\n    incomeSum += incomeTypeTicketsAmount[i];\n  } // console.log(incomeTypeTickets)\n  // console.log('incomeTypeTicketsAmount' + incomeTypeTicketsAmount)\n  // console.log('This is incomeSum ' + incomeSum)\n  // console.log('incomeTypeTickets' + incomeTypeTickets)\n  // THIS PART WILL CHANGE INCOME TICKET AMOUNT ARRAY STRING TO INTERGER\n\n\n  const expenseTypeTicketsAmount = [];\n  const expenseTypeTickets = listaTickets.filter(data => data.type === 'expense' && data.date >= fromDate && data.date <= toDate);\n  const expenseTypeTicketsString = expenseTypeTickets.map(data => data.amount);\n  expenseTypeTicketsString.forEach(str => {\n    expenseTypeTicketsAmount.push(Number(str));\n  });\n  let expenseSum = 0;\n\n  for (let i = 0; i < expenseTypeTicketsAmount.length; i++) {\n    expenseSum += expenseTypeTicketsAmount[i];\n  } // console.log(expenseTypeTickets)\n  // console.log('expenseTypeTicketsAmount' + expenseTypeTicketsAmount)\n  // console.log('This is expenseSum ' + expenseSum)\n  // console.log('expenseTypeTickets' + expenseTypeTickets)\n  // THIS WILL GET THE COMISSION AND RESULT\n\n\n  const porcentajeComision = 0.10;\n  const commission = incomeSum * porcentajeComision;\n  const result = incomeSum - expenseSum - commission;\n\n  const filterReset = () => {\n    setFromDate(\"\");\n    setToDate(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full lg:flex-row justify-evenly mt-0 bg-pink-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-left text-xl font-bold lg:text-xl my\",\n        children: \"Filtro por fechas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-full lg:w-3/4  justify-around\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fromDate\",\n            className: \"block text-gray-700 text-sm font-bold mb-2 text-2xl\",\n            children: \"Desde\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fromDate\",\n            name: \"fromDate\",\n            type: \"date\",\n            onChange: e => setFromDate(e.target.value),\n            value: fromDate,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toDate\",\n            className: \"block text-gray-700 text-sm font-bold mb-2 text-2xl\",\n            children: \"Hasta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"toDate\",\n            name: \"toDate\",\n            type: \"date\",\n            onChange: e => setToDate(e.target.value),\n            value: toDate,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => filterReset(),\n        className: \"bg-pink-500 hover:bg-white text-white hover:text-black font-semibold px-4 border border-black hover:border-pink-400 rounded shadow h-10 w-3/4 lg:w-48 mx-auto lg:mx-12 my-8\",\n        children: \"Quitar Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-style: italic w-full flex lg:flex-row flex-col lg:px-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:w-2/4 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl ml-4\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 23\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense' && (fromDate && toDate ? data.date >= fromDate && data.date <= toDate : data.date)).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 27\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:w-2/4 w-full \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" w-full\",\n          children: uniqueBuildingsWithTickets === null || uniqueBuildingsWithTickets === void 0 ? void 0 : uniqueBuildingsWithTickets.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl ml-4\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 23\n            }, this), listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income' && (fromDate && toDate ? data.date >= fromDate && data.date <= toDate : data.date)).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              data: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 27\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fromDate && toDate ? /*#__PURE__*/_jsxDEV(FinanceCard, {\n        from: fromDate,\n        to: toDate,\n        income: incomeSum,\n        expense: expenseSum,\n        commission: commission,\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"UUSLhPgzIx4YZW6i+TgPTDgunRc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","TicketCard","FinanceCard","Dashboard","listaTickets","setListaTickets","propertyList","setPropertyList","fromDate","setFromDate","toDate","setToDate","unSubscribe","data","docs","map","doc","id","uniqueBuildingsWithTickets","Set","property","incomeTypeTicketsAmount","incomeTypeTickets","filter","type","date","incomeTypeTicketsString","amount","forEach","str","push","Number","incomeSum","i","length","expenseTypeTicketsAmount","expenseTypeTickets","expenseTypeTicketsString","expenseSum","porcentajeComision","commission","result","filterReset","e","target","value","uniqueBuilding","buildingIndex","filteredBuilding","_index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport TicketCard from \"../../Components/TicketCard\"\nimport FinanceCard from \"../../Components/FinanceCard\"\n// import Chart from \"../Chart\"\n\nconst Dashboard = () => {\n  const [listaTickets, setListaTickets] = useState([])\n  const [propertyList, setPropertyList] = useState([])\n  const [fromDate, setFromDate] = useState(\"\")\n  const [toDate, setToDate] = useState(\"\")\n  // const [propertySelected, setPropertySelected] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot((getCollectionRef(\"tickets\")), (data) => {\n      setListaTickets(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"properties\"), (data) => {\n      setPropertyList(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n   }, [])\n  \n const uniqueBuildingsWithTickets = [\n   ...new Set(listaTickets?.map((({property}) => property) ))\n  ]\n  \n  // THIS PART WILL CHANGE INCOME TICKET AMOUNT ARRAY STRING TO INTERGER\n\n  const incomeTypeTicketsAmount = []\n\n  const incomeTypeTickets = listaTickets.filter(data => (data.type === 'income' && data.date >= fromDate && data.date <= toDate))\n  const incomeTypeTicketsString = incomeTypeTickets.map(data => data.amount)\n  \n  incomeTypeTicketsString.forEach( str=> {\n    incomeTypeTicketsAmount.push(Number(str))\n  })\n  let incomeSum = 0\n  for (let i = 0; i < incomeTypeTicketsAmount.length; i++) {\n    incomeSum += incomeTypeTicketsAmount[i];\n  }\n  // console.log(incomeTypeTickets)\n  // console.log('incomeTypeTicketsAmount' + incomeTypeTicketsAmount)\n  // console.log('This is incomeSum ' + incomeSum)\n  // console.log('incomeTypeTickets' + incomeTypeTickets)\n  \n    // THIS PART WILL CHANGE INCOME TICKET AMOUNT ARRAY STRING TO INTERGER\n\n    const expenseTypeTicketsAmount = []\n\n    const expenseTypeTickets = listaTickets.filter(data => (data.type === 'expense' && data.date >= fromDate && data.date <= toDate))\n    const expenseTypeTicketsString = expenseTypeTickets.map(data => data.amount)\n    \n    expenseTypeTicketsString.forEach( str=> {\n      expenseTypeTicketsAmount.push(Number(str))\n    })\n    let expenseSum = 0\n    for (let i = 0; i < expenseTypeTicketsAmount.length; i++) {\n      expenseSum += expenseTypeTicketsAmount[i];\n    }\n    // console.log(expenseTypeTickets)\n    // console.log('expenseTypeTicketsAmount' + expenseTypeTicketsAmount)\n    // console.log('This is expenseSum ' + expenseSum)\n    // console.log('expenseTypeTickets' + expenseTypeTickets)\n    \n  // THIS WILL GET THE COMISSION AND RESULT\n    const porcentajeComision = 0.10\n    const commission = incomeSum * porcentajeComision\n    const result = incomeSum - expenseSum - commission\n\n  \n  const filterReset = () => {\n      setFromDate(\"\")\n      setToDate(\"\")\n    }\n\n  return (\n    <div>\n          <div className=\"flex flex-col w-full lg:flex-row justify-evenly mt-0 bg-pink-300\">\n            <h2 className=\"text-left text-xl font-bold lg:text-xl my\">Filtro por fechas</h2>\n            <div className=\"flex w-full lg:w-3/4  justify-around\">\n            <div className=\"flex flex-col justify-center\">\n                <label htmlFor=\"fromDate\" className=\"block text-gray-700 text-sm font-bold mb-2 text-2xl\">Desde</label>\n                                  <input \n                                  id=\"fromDate\"\n                                  name=\"fromDate\"\n                                  type=\"date\"\n                                  onChange={e => setFromDate(e.target.value)}\n                                  value={fromDate}\n                                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                  />\n            </div>\n            <div className=\"flex flex-col justify-center\">\n                <label htmlFor=\"toDate\" className=\"block text-gray-700 text-sm font-bold mb-2 text-2xl\">Hasta</label>\n                                  <input \n                                  id=\"toDate\"\n                                  name=\"toDate\"\n                                  type=\"date\"\n                                  onChange={e => setToDate(e.target.value)}\n                                  value={toDate}\n                                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                  />\n            </div>\n            </div>\n            <button onClick={() => filterReset()} className=\"bg-pink-500 hover:bg-white text-white hover:text-black font-semibold px-4 border border-black hover:border-pink-400 rounded shadow h-10 w-3/4 lg:w-48 mx-auto lg:mx-12 my-8\">Quitar Filtros</button>\n            {/* <div className=\"flex justify-center\">\n              <h2 className=\"text-center text-2xl\">Filtro por Propiedad</h2>\n              <select \n                                      name=\"property\"\n                                      value={propertySelected}\n                                      onChange={e => setPropertySelected(e.target.value)}\n                                      defaultValue={'disable-value'}\n                                      className=\"shadow appearance-none border rounded w-1/3 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                      >\n                                          <>\n                                          <option value={'disable-value'}> -- selecciona una opcion -- </option>\n                                          {propertyList?.map((uniqueBuilding) => (\n                                          <option key={uniqueBuilding.id}>{uniqueBuilding.property}</option>\n                                              ))}\n                                          </>\n                                          \n              </select>\n              </div>  */}\n            </div> \n\n      <div className=\"font-style: italic w-full flex lg:flex-row flex-col lg:px-6\">\n          <div className=\"lg:w-2/4 w-full\">\n                <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n                <div className=\"\">\n                  {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                    <div key={buildingIndex}>\n                      <h3 className=\"font-bold text-xl ml-4\">{uniqueBuilding}</h3>\n                        {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'expense' && \n                        ( fromDate && toDate ?\n                        (data.date >= fromDate && data.date <= toDate) : data.date))\n                        .map((filteredBuilding, _index) => (\n                          <TicketCard\n                          id={_index}\n                          data={filteredBuilding}\n                          />\n                          ))\n                        }\n                    </div>\n                  ))}\n                </div>\n          </div>\n            <div className=\"lg:w-2/4 w-full \">\n              <h1 className=\"font-bold text-2xl text-center\">Ingresos</h1>\n              <div className=\" w-full\">\n                  {uniqueBuildingsWithTickets?.map((uniqueBuilding, buildingIndex) => (\n                    <div key={buildingIndex}>\n                      <h3 className=\"font-bold text-xl ml-4\">{uniqueBuilding}</h3>\n                        {listaTickets.filter(data => data.property === uniqueBuilding && data.type === 'income' && \n                        ( fromDate && toDate ?\n                        (data.date >= fromDate && data.date <= toDate) : data.date) )\n                        .map((filteredBuilding, _index) => (\n                          <TicketCard\n                          id={_index}\n                          data={filteredBuilding}\n                          />\n                          ))\n                        }\n                    </div>\n                  ))}\n                </div>\n            </div>\n      </div>\n      <div>\n        {fromDate&&toDate?\n        <FinanceCard\n        from={fromDate}\n        to={toDate}\n        income={incomeSum}\n        expense={expenseSum}\n        commission={commission}\n        result={result}\n        /> : \n        \"\"}\n      </div>\n    </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}