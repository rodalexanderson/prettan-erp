{"ast":null,"code":"let flexSpec = require('./flex-spec');\n\nlet Declaration = require('../declaration');\n\nclass FlexBasis extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-basis';\n  }\n  /**\n   * Return flex property for 2012 spec\n   */\n\n\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n\n    if (spec === 2012) {\n      return prefix + 'flex-preferred-size';\n    }\n\n    return super.prefixed(prop, prefix);\n  }\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n\n\n  set(decl, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix);\n    }\n\n    return undefined;\n  }\n\n}\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size'];\nmodule.exports = FlexBasis;","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/node_modules/autoprefixer/lib/hacks/flex-basis.js"],"names":["flexSpec","require","Declaration","FlexBasis","normalize","prefixed","prop","prefix","spec","set","decl","undefined","names","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAME,SAAN,SAAwBD,WAAxB,CAAoC;AAClC;AACF;AACA;AACEE,EAAAA,SAAS,GAAG;AACV,WAAO,YAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,QAAQ,CAACC,IAAD,EAAOC,MAAP,EAAe;AACrB,QAAIC,IAAJ;AACC,KAACA,IAAD,EAAOD,MAAP,IAAiBP,QAAQ,CAACO,MAAD,CAAzB;;AACD,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAOD,MAAM,GAAG,qBAAhB;AACD;;AACD,WAAO,MAAMF,QAAN,CAAeC,IAAf,EAAqBC,MAArB,CAAP;AACD;AAED;AACF;AACA;;;AACEE,EAAAA,GAAG,CAACC,IAAD,EAAOH,MAAP,EAAe;AAChB,QAAIC,IAAJ;AACC,KAACA,IAAD,EAAOD,MAAP,IAAiBP,QAAQ,CAACO,MAAD,CAAzB;;AACD,QAAIC,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,OAA9B,EAAuC;AACrC,aAAO,MAAMC,GAAN,CAAUC,IAAV,EAAgBH,MAAhB,CAAP;AACD;;AACD,WAAOI,SAAP;AACD;;AA9BiC;;AAiCpCR,SAAS,CAACS,KAAV,GAAkB,CAAC,YAAD,EAAe,qBAAf,CAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiBX,SAAjB","sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexBasis extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-basis'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-preferred-size'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size']\n\nmodule.exports = FlexBasis\n"]},"metadata":{},"sourceType":"script"}