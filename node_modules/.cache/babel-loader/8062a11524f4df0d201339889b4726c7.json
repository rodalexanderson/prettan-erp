{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\";\nimport ExpenseCard from \"../../Components/ExpenseCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  const expenses = [{\n    timestamp: '2022-04-15',\n    property: 'San Pedro',\n    subindex: 'PH2',\n    amount: 4000,\n    concept: 'Carpintería',\n    type: 'expense'\n  }, {\n    timestamp: '2022-04-11',\n    property: 'San Pedro',\n    subindex: 'PH1',\n    amount: 3000,\n    concept: 'Soldadura',\n    type: 'expense'\n  }, {\n    timestamp: '2022-04-11',\n    property: 'San Pedro',\n    subindex: 'PH1',\n    amount: 9000,\n    concept: 'Soldadura',\n    type: 'expense'\n  }, {\n    timestamp: '2022-04-08',\n    property: 'Cuauhtemoc',\n    subindex: 'PH1',\n    amount: 8000,\n    concept: 'Soldadura',\n    type: 'expense'\n  }, {\n    timestamp: '2022-04-02',\n    property: 'Cuauhtemoc',\n    subindex: '333',\n    amount: 6000,\n    concept: 'Reparacion de puerta',\n    type: 'expense'\n  }, {\n    timestamp: '2022-04-12',\n    property: 'San Pedro',\n    subindex: '301',\n    amount: 3000,\n    concept: 'Soldadura',\n    type: 'income'\n  }, {\n    timestamp: '2022-04-12',\n    property: 'San Pedro',\n    subindex: '301',\n    amount: 3000,\n    concept: 'Soldadura',\n    type: 'income'\n  }];\n  const uniqueBuildings = [...new Set(expenses === null || expenses === void 0 ? void 0 : expenses.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-style: italic w-full flex flex-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl text-center\",\n        children: \"Gastos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: expenses && (uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-xl\",\n            children: uniqueBuilding\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), expenses.filter(expense => expense.property === uniqueBuilding && expense.type == 'income').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(ExpenseCard, {\n            id: _index,\n            color: filteredBuilding.color,\n            expense: filteredBuilding\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }, this))]\n        }, buildingIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-2xl text-center\",\n        children: \"Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["ExpenseCard","Dashboard","expenses","timestamp","property","subindex","amount","concept","type","uniqueBuildings","Set","map","uniqueBuilding","buildingIndex","filter","expense","filteredBuilding","_index","color"],"mappings":"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","sourcesContent":["import ExpenseCard from \"../../Components/ExpenseCard\"\n\nconst Dashboard = () => {\n\n  const expenses = [\n    {\n        timestamp: '2022-04-15',\n        property: 'San Pedro',\n        subindex: 'PH2',\n        amount: 4000,\n        concept: 'Carpintería',\n        type: 'expense',\n    },\n    {\n        timestamp: '2022-04-11',\n        property: 'San Pedro',\n        subindex: 'PH1',\n        amount: 3000,\n        concept: 'Soldadura',\n        type: 'expense',\n    },\n    {\n        timestamp: '2022-04-11',\n        property: 'San Pedro',\n        subindex: 'PH1',\n        amount: 9000,\n        concept: 'Soldadura',\n        type: 'expense',\n    },\n    {\n        timestamp: '2022-04-08',\n        property: 'Cuauhtemoc',\n        subindex: 'PH1',\n        amount: 8000,\n        concept: 'Soldadura',\n        type: 'expense',\n    },\n    {\n        timestamp: '2022-04-02',\n        property: 'Cuauhtemoc',\n        subindex: '333',\n        amount: 6000,\n        concept: 'Reparacion de puerta',\n        type: 'expense',\n    },\n    {\n        timestamp: '2022-04-12',\n        property: 'San Pedro',\n        subindex: '301',\n        amount: 3000,\n        concept: 'Soldadura',\n        type: 'income',\n    }, \n    {\n      timestamp: '2022-04-12',\n      property: 'San Pedro',\n      subindex: '301',\n      amount: 3000,\n      concept: 'Soldadura',\n      type: 'income',\n  }\n]\n const uniqueBuildings = [\n   ...new Set(expenses?.map(({property}) => property))\n ]\n\n    return (\n    <div className=\"font-style: italic w-full flex flex-wrap\">\n      <div>\n            <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n            <div className=\"\">\n              {expenses && uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {expenses.filter(expense => expense.property === uniqueBuilding && expense.type == 'income')\n                    .map((filteredBuilding, _index) => (\n                      <ExpenseCard\n                        id={_index}\n                        color={filteredBuilding.color}\n                        expense={filteredBuilding}\n                      />\n                    ))\n                    }\n                </div>\n              ))}\n            </div>\n      </div>\n        <div>\n          <h1 className=\"font-bold text-2xl text-center\">Income</h1>\n        </div>\n    </div>\n    )\n      }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}