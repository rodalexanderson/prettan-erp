{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\BuildingPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { addData, getCollectionRef } from \"../../Services/CRUD\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BuildingPage = () => {\n  _s();\n\n  const [listaDeptos, setListaDeptos] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await addData(\"tickets\", {\n      property: formData.property,\n      subindex: formData.subindex\n    });\n    navigate('/');\n  };\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"property\"), data => {\n      setListaDeptos(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildings = [...new Set(listaDeptos === null || listaDeptos === void 0 ? void 0 : listaDeptos.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n  const [formData, setFormData] = useState({\n    timestamp: new Date().toISOString()\n  });\n  const editMode = false;\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-black text-center\",\n      children: editMode ? 'Update your Ticket' : 'Create a Ticket'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex flex-col\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex flex-col flex-wrap lg:flex-row w-3/4 m-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"property\",\n            children: \"Property\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"property\",\n            value: formData.property,\n            onChange: handleChange,\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                selected: true,\n                value: true,\n                children: \" -- select an option -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                required: true,\n                children: uniqueBuilding\n              }, buildingIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subindex\",\n            children: \"Property Subindex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"subindex\",\n            value: formData.subindex,\n            onChange: handleChange,\n            required: true,\n            children: formData.property ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                selected: true,\n                value: true,\n                children: \" -- select an option -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 32\n              }, this), listaDeptos.filter(expense => expense.property === formData.property).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                id: _index,\n                children: [\" \", filteredBuilding.subindex, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 34\n              }, this))]\n            }, void 0, true) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"type\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: formData.type,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              value: true,\n              children: \" -- select an option -- \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"expense\",\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"income\",\n              selected: true,\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"amount\",\n            name: \"amount\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true,\n            value: formData.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"concept\",\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"concept\",\n            name: \"concept\",\n            type: \"text\",\n            onChange: handleChange,\n            required: true,\n            value: formData.concept\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BuildingPage, \"xB4L2Z2iTqC+umpLOWBGJRkW6aI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BuildingPage;\nexport default BuildingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuildingPage\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/BuildingPage/index.jsx"],"names":["useState","useEffect","onSnapshot","addData","getCollectionRef","Navigate","useNavigate","BuildingPage","listaDeptos","setListaDeptos","navigate","handleSubmit","e","preventDefault","property","formData","subindex","unSubscribe","data","docs","map","doc","id","uniqueBuildings","Set","setFormData","timestamp","Date","toISOString","editMode","handleChange","value","target","name","prevState","console","log","uniqueBuilding","buildingIndex","filter","expense","filteredBuilding","_index","type","amount","concept"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { onSnapshot } from \"firebase/firestore\"\r\nimport { addData, getCollectionRef } from \"../../Services/CRUD\"\r\nimport { Navigate, useNavigate } from \"react-router-dom\"\r\n\r\nconst BuildingPage = () => {\r\n    const [listaDeptos, setListaDeptos] = useState([])\r\n    const navigate = useNavigate()\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        await addData(\"tickets\", {\r\n            property: formData.property,\r\n            subindex: formData.subindex,\r\n        })\r\n        navigate('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unSubscribe = onSnapshot(getCollectionRef(\"property\"), (data) => {\r\n          setListaDeptos(\r\n            data.docs.map((doc) => {\r\n              return {...doc.data(), id: doc.id}\r\n            })\r\n          )\r\n        })\r\n        return () => {\r\n          unSubscribe()\r\n        }\r\n       }, [])\r\n\r\n    const uniqueBuildings = [\r\n        ...new Set(listaDeptos?.map(({property}) => property))\r\n       ]\r\n\r\n    const [formData, setFormData] = useState({\r\n        timestamp: new Date().toISOString()\r\n    })\r\n    \r\n    const editMode = false\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value\r\n        const name = e.target.name\r\n\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n        })\r\n        )\r\n    }\r\n    console.log(formData)\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            <h1 className=\"text-black text-center\">{editMode ? 'Update your Ticket' : 'Create a Ticket'}</h1>\r\n            <div className=\"flex flex-col\">\r\n                <form onSubmit={handleSubmit} className=\"flex flex-col\">\r\n                    <section className=\"flex flex-col flex-wrap lg:flex-row w-3/4 m-10\">\r\n                            <label htmlFor=\"property\">Property</label>\r\n                            <select \r\n                                name=\"property\"\r\n                                value={formData.property}\r\n                                onChange={handleChange}\r\n                                required={true}\r\n                                >\r\n                                    <>\r\n                                    <option disabled selected value> -- select an option -- </option>\r\n                                    {uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\r\n                                    <option required={true} key={buildingIndex}>{uniqueBuilding}</option>\r\n                                        ))}\r\n                                    </>\r\n                                    \r\n                            </select>\r\n\r\n\r\n                            <label htmlFor=\"subindex\">Property Subindex</label>\r\n                            <select \r\n                                name=\"subindex\"\r\n                                value={formData.subindex}\r\n                                onChange={handleChange}\r\n                                required={true}\r\n                              \r\n                                >\r\n                               {formData.property?\r\n                               <>\r\n                               <option disabled selected value> -- select an option -- </option>\r\n                                {listaDeptos.filter(expense => expense.property === formData.property)\r\n                                .map((filteredBuilding, _index) => (\r\n                                 <option id={_index} > {filteredBuilding.subindex} </option>\r\n                                    ))\r\n                                }\r\n                               </>\r\n                               :\"\"}\r\n                                    \r\n                            </select>\r\n\r\n                            {/* <fieldset>\r\n                                <legend>Select a Property Subindex</legend>\r\n\r\n                                {listaDeptos.filter(expense => expense.property === formData.property)\r\n                                .map((filteredBuilding, _index) => (\r\n                                    <>\r\n                                        <input type=\"checkbox\" id={_index} value={formData.subindex} /> \r\n                                        <label htmlFor={_index} >{filteredBuilding.subindex}</label>\r\n                                    </>\r\n                                    ))\r\n                                }\r\n                                \r\n                                \r\n                            </fieldset> */}\r\n\r\n\r\n                            <label htmlFor=\"type\">Type</label>\r\n                            <select \r\n                                name=\"type\"\r\n                                value={formData.type}\r\n                                onChange={handleChange}\r\n                                required={true}\r\n                                >\r\n                                <option disabled selected value> -- select an option -- </option>\r\n                                <option value=\"expense\">Expense</option>\r\n                                <option value=\"income\" selected>Income</option>\r\n                            </select>\r\n                            <label htmlFor=\"amount\">Amount</label>\r\n                            <input \r\n                            id=\"amount\"\r\n                            name=\"amount\"\r\n                            type=\"number\"\r\n                            onChange={handleChange}\r\n                            required={true}\r\n                            value={formData.amount}\r\n                            />\r\n                            <label htmlFor=\"concept\">Concept</label>\r\n                            <input \r\n                            id=\"concept\"\r\n                            name=\"concept\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            required={true}\r\n                            value={formData.concept}\r\n                            />\r\n                        <input type=\"submit\" />\r\n                    </section>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default BuildingPage"]},"metadata":{},"sourceType":"module"}