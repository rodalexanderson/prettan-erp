{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Dashboard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport TicketCard from \"../../Components/TicketCard\";\nimport Chart from \"../Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [listaDeptos, setListaDeptos] = useState([]);\n  const [buildingName, setBuildingName] = useState(\"\");\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaDeptos(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildings = [...new Set(listaDeptos === null || listaDeptos === void 0 ? void 0 : listaDeptos.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n  console.log('lista deptos', listaDeptos);\n  const chartBuilding = listaDeptos.filter(property => property.property === buildingName);\n  const amountArr = chartBuilding.map(property => {\n    return property.amount;\n  });\n  const datesArr = chartBuilding.map(property => {\n    return property.date;\n  });\n  console.log('this is buildingName', buildingName);\n  console.log('this is amount arr', amountArr);\n  console.log('this is dates arr', datesArr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"buildingName\",\n      value: setBuildingName,\n      required: true,\n      defaultValue: 'disable-value',\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: 'disable-value',\n          children: \" -- select an option -- \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), listaDeptos === null || listaDeptos === void 0 ? void 0 : listaDeptos.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: uniqueBuilding.property\n        }, buildingIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      dates: datesArr,\n      amount: amountArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-style: italic w-full flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), listaDeptos.filter(expense => expense.property === uniqueBuilding && expense.type === 'expense').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              expense: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold text-2xl text-center\",\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-xl\",\n              children: uniqueBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), listaDeptos.filter(expense => expense.property === uniqueBuilding && expense.type === 'income').map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(TicketCard, {\n              id: _index,\n              color: filteredBuilding.color,\n              expense: filteredBuilding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this))]\n          }, buildingIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"vDbnBrF46H1mRP30OVjkjuAIsqM=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Dashboard/index.jsx"],"names":["useEffect","useState","onSnapshot","getCollectionRef","TicketCard","Chart","Dashboard","listaDeptos","setListaDeptos","buildingName","setBuildingName","unSubscribe","data","docs","map","doc","id","uniqueBuildings","Set","property","console","log","chartBuilding","filter","amountArr","amount","datesArr","date","uniqueBuilding","buildingIndex","expense","type","filteredBuilding","_index","color"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\nimport TicketCard from \"../../Components/TicketCard\"\nimport Chart from \"../Chart\"\n\nconst Dashboard = () => {\n  const [listaDeptos, setListaDeptos] = useState([])\n  const [buildingName, setBuildingName] = useState(\"\")\n\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), (data) => {\n      setListaDeptos(\n        data.docs.map((doc) => {\n          return {...doc.data(), id: doc.id}\n        })\n      )\n    })\n    return () => {\n      unSubscribe()\n    }\n  }, [])\n  \n const uniqueBuildings = [\n   ...new Set(listaDeptos?.map(({property}) => property))\n  ]\n\n  \n  console.log('lista deptos',listaDeptos)\n\n  const chartBuilding = listaDeptos.filter(property => property.property === buildingName)\n\n  const amountArr = chartBuilding.map((property) => {\n    return property.amount\n  }) \n  \n  const datesArr = chartBuilding.map((property) => {\n    return property.date\n  })  \n  console.log('this is buildingName', buildingName)\n  console.log('this is amount arr',amountArr)\n  console.log('this is dates arr',datesArr)\n\n  return (\n    <div>\n\n   \n      <select \n      name=\"buildingName\" \n      value={setBuildingName}\n      required={true}\n      defaultValue={'disable-value'}\n      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n      >\n        <>\n        <option disabled value={'disable-value'}> -- select an option -- </option>\n        {listaDeptos?.map((uniqueBuilding, buildingIndex) => (\n        <option key={buildingIndex}>{uniqueBuilding.property}</option>\n                                        ))}\n        </>\n      </select>\n    \n    \n\n\n    <Chart\n    dates={datesArr}\n    amount={amountArr}\n    />\n\n\n   <div className=\"font-style: italic w-full flex flex-wrap\">\n      <div className=\"w-2/4\">\n            <h1 className=\"font-bold text-2xl text-center\">Gastos</h1>\n            <div className=\"\">\n              {uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaDeptos.filter(expense => expense.property === uniqueBuilding && expense.type === 'expense')\n                    .map((filteredBuilding, _index) => (\n                      <TicketCard\n                      id={_index}\n                      expense={filteredBuilding}\n                      />\n                      ))\n                    }\n                </div>\n              ))}\n            </div>\n      </div>\n        <div className=\"w-2/4\">\n          <h1 className=\"font-bold text-2xl text-center\">Ingresos</h1>\n          <div className=\"w-full\">\n              {uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                <div key={buildingIndex}>\n                  <h3 className=\"font-bold text-xl\">{uniqueBuilding}</h3>\n                    {listaDeptos.filter(expense => expense.property === uniqueBuilding && expense.type === 'income')\n                    .map((filteredBuilding, _index) => (\n                      <TicketCard\n                      id={_index}\n                      color={filteredBuilding.color}\n                      expense={filteredBuilding}\n                      />\n                      ))\n                    }\n                </div>\n              ))}\n            </div>\n        </div>\n    </div>\n              </div>\n    )\n  }\n  \n  export default Dashboard"]},"metadata":{},"sourceType":"module"}