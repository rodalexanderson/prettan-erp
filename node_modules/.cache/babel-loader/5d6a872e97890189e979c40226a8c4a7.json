{"ast":null,"code":"var _jsxFileName = \"/Users/efecto10/Desktop/FIrebase Config To HomePage/src/Components/TweetList/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport { userContext } from \"../../context/userProvider\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport { ReactComponent as Heart } from \"../../multimedia/SVG/solid.svg\";\nimport { ReactComponent as Empty } from \"../../multimedia/SVG/empty.svg\";\nimport { ReactComponent as Bin } from \"../../multimedia/SVG/bin.svg\";\nimport { handleLike } from \"../../Functions\";\nimport { handleDelete } from \"../../Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TweetList = _ref => {\n  _s();\n\n  let {\n    setShowProfile,\n    setShowFavorites\n  } = _ref;\n  const [listaTweets, setListaTweets] = useState([]);\n  const {\n    uid\n  } = useContext(userContext); // const dateTweet = new Date().toLocaleDateString();\n\n  useEffect(() => {\n    const unSuscribe = onSnapshot(getCollectionRef(\"tweets\"), data => {\n      setListaTweets(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSuscribe();\n    };\n  }, []);\n\n  const handleInProfile = () => {\n    setShowProfile(true);\n    setShowFavorites(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-tweet-list\",\n    children: listaTweets.map(tweet => {\n      // console.log({tweet})\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: uid === tweet.uid ? handleInProfile : null,\n          className: `${uid === tweet.uid && \"cursor\"} image-profile`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tweet.photo,\n            className: \"photo-profile\",\n            alt: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-name-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-name\",\n                style: {\n                  backgroundColor: tweet.color\n                },\n                children: tweet.nameUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"date\",\n                children: [\"- \", tweet.dateTweet]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), uid === tweet.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"trush-svg\",\n              title: \"Borrar tweet\",\n              onClick: () => handleDelete(tweet.id) // onClick={() => handleDelete(tweet.id)}\n              ,\n              children: /*#__PURE__*/_jsxDEV(Bin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweet-post\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tweet.tweet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"likes-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"like-svg\",\n              onClick: () => {\n                handleLike({\n                  tweet\n                }, uid);\n              },\n              children: tweet.userLikes != 0 ? /*#__PURE__*/_jsxDEV(Heart, {\n                className: \"like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n                className: \"unlike\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: tweet.userLikes ? \"favorite\" : \"\",\n              children: tweet.likes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, tweet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TweetList, \"UYwy5h4e/MOb67ggmtz89os4yXE=\");\n\n_c = TweetList;\nexport default TweetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/Users/efecto10/Desktop/FIrebase Config To HomePage/src/Components/TweetList/index.jsx"],"names":["useEffect","useState","useContext","userContext","onSnapshot","getCollectionRef","ReactComponent","Heart","Empty","Bin","handleLike","handleDelete","TweetList","setShowProfile","setShowFavorites","listaTweets","setListaTweets","uid","unSuscribe","data","docs","map","doc","id","handleInProfile","tweet","photo","backgroundColor","color","nameUser","dateTweet","userLikes","likes"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { userContext } from \"../../context/userProvider\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport { ReactComponent as Heart } from \"../../multimedia/SVG/solid.svg\";\nimport { ReactComponent as Empty } from \"../../multimedia/SVG/empty.svg\";\nimport { ReactComponent as Bin } from \"../../multimedia/SVG/bin.svg\";\nimport { handleLike } from \"../../Functions\";\nimport { handleDelete } from \"../../Functions\";\n\n\nconst TweetList = ({\n  setShowProfile,\n  setShowFavorites,\n}) => {\n  const [listaTweets, setListaTweets] = useState([]);\n  const { uid } = useContext(userContext);\n  // const dateTweet = new Date().toLocaleDateString();\n\n  useEffect(() => {\n    const unSuscribe = onSnapshot(getCollectionRef(\"tweets\"), (data) => {\n      setListaTweets(\n        data.docs.map((doc) => {\n          return { ...doc.data(), id: doc.id };\n        })\n      );\n    });\n    return () => {\n      unSuscribe();\n    };\n  }, []);\n\n  const handleInProfile = () => {\n    setShowProfile(true);\n    setShowFavorites(false);\n  };\n\n  return (\n    <div className=\"container-tweet-list\">\n      {listaTweets.map((tweet) => {\n        // console.log({tweet})\n        return (\n          <div className=\"tweet-container\" key={tweet.id}>\n            <div\n              onClick={uid === tweet.uid ? handleInProfile : null}\n              className={`${uid === tweet.uid && \"cursor\"} image-profile`}\n            >\n              <img\n                src={tweet.photo}\n                className=\"photo-profile\"\n                alt=\"profile\"\n              />\n              \n            </div>\n            <div className=\"post-info\">\n              <div className=\"user-name-date\">\n                <div className=\"flex-row\">\n                  <div\n                    className=\"user-name\"\n                    style={{ backgroundColor: tweet.color }}\n                  >\n                    {tweet.nameUser}\n                  </div>\n                  <p className=\"date\">- {tweet.dateTweet}</p>\n                </div>\n                {uid === tweet.uid && (\n                  <button\n                    className=\"trush-svg\"\n                    title=\"Borrar tweet\"\n                    onClick={() => handleDelete(tweet.id)}\n                    // onClick={() => handleDelete(tweet.id)}\n                  >\n                    <Bin />\n                  </button>\n                )}\n              </div>\n              <div className=\"tweet-post\">\n                <p>{tweet.tweet}</p>\n              </div>\n              <div className=\"likes-container\">\n                <button\n                  className=\"like-svg\"\n                  onClick={() => {\n                    handleLike({ tweet }, uid);\n                  }}\n                >\n                  {tweet.userLikes != 0 ? (\n                    <Heart className=\"like\" />\n                  ) : (\n                    <Empty className=\"unlike\" />\n                  )}\n                </button>\n                <p className={tweet.userLikes ? \"favorite\" : \"\"}>\n                  {tweet.likes}\n               </p>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TweetList;"]},"metadata":{},"sourceType":"module"}