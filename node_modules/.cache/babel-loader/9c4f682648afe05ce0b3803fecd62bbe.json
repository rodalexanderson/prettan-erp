{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\TicketPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { getCollectionRef } from \"../../Services/CRUD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TicketPage = () => {\n  _s();\n\n  const [listaDeptos, setListaDeptos] = useState([]);\n  useEffect(() => {\n    const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), data => {\n      setListaDeptos(data.docs.map(doc => {\n        return { ...doc.data(),\n          id: doc.id\n        };\n      }));\n    });\n    return () => {\n      unSubscribe();\n    };\n  }, []);\n  const uniqueBuildings = [...new Set(listaDeptos === null || listaDeptos === void 0 ? void 0 : listaDeptos.map(_ref => {\n    let {\n      property\n    } = _ref;\n    return property;\n  }))];\n  const [formData, setFormData] = useState({\n    timestamp: new Date().toISOString()\n  });\n  const editMode = false;\n\n  const handleSubmit = () => {\n    console.log('submitted');\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-black text-center\",\n      children: editMode ? 'Update your Ticket' : 'Create a Ticket'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex flex-col\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"flex flex-col flex-wrap lg:flex-row w-8/9\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"property\",\n            children: \"Property\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"property\",\n            value: formData.property,\n            onChange: handleChange,\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                selected: true,\n                value: true,\n                children: \" -- select an option -- \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), uniqueBuildings === null || uniqueBuildings === void 0 ? void 0 : uniqueBuildings.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                required: true,\n                children: uniqueBuilding\n              }, buildingIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subindex\",\n            children: \"Property Subindex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"subindex\",\n            value: formData.subindex,\n            onChange: handleChange,\n            required: true,\n            children: formData.property ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: listaDeptos.filter(expense => expense.property === formData.property).map((filteredBuilding, _index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                id: _index,\n                children: filteredBuilding.subindex\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this))\n            }, void 0, false) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"type\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: formData.type,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              value: true,\n              children: \" -- select an option -- \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"expense\",\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"income\",\n              selected: true,\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"amount\",\n            name: \"amount\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true,\n            value: formData.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"concept\",\n            children: \"Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"concept\",\n            name: \"concept\",\n            type: \"text\",\n            onChange: handleChange,\n            required: true,\n            value: formData.concept\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"su\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TicketPage, \"GVtS8PjPmuc16YdAPPuosQl0nFA=\");\n\n_c = TicketPage;\nexport default TicketPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketPage\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/TicketPage/index.jsx"],"names":["useState","useEffect","onSnapshot","getCollectionRef","TicketPage","listaDeptos","setListaDeptos","unSubscribe","data","docs","map","doc","id","uniqueBuildings","Set","property","formData","setFormData","timestamp","Date","toISOString","editMode","handleSubmit","console","log","handleChange","e","value","target","name","prevState","uniqueBuilding","buildingIndex","subindex","filter","expense","filteredBuilding","_index","type","amount","concept"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { onSnapshot } from \"firebase/firestore\"\nimport { getCollectionRef } from \"../../Services/CRUD\"\n\nconst TicketPage = () => {\n    const [listaDeptos, setListaDeptos] = useState([])\n\n    useEffect(() => {\n        const unSubscribe = onSnapshot(getCollectionRef(\"tickets\"), (data) => {\n          setListaDeptos(\n            data.docs.map((doc) => {\n              return {...doc.data(), id: doc.id}\n            })\n          )\n        })\n        return () => {\n          unSubscribe()\n        }\n       }, [])\n\n    const uniqueBuildings = [\n        ...new Set(listaDeptos?.map(({property}) => property))\n       ]\n\n    const [formData, setFormData] = useState({\n        timestamp: new Date().toISOString()\n    })\n    \n    const editMode = false\n\n    const handleSubmit = () => {\n        console.log('submitted')\n    }\n    const handleChange = (e) => {\n        const value = e.target.value\n        const name = e.target.name\n\n        setFormData((prevState) => ({\n            ...prevState,\n            [name]: value\n        })\n        )\n    }\n    console.log(formData)\n    return (\n        <div className=\"flex flex-col\">\n            <h1 className=\"text-black text-center\">{editMode ? 'Update your Ticket' : 'Create a Ticket'}</h1>\n            <div className=\"flex flex-col\">\n                <form onSubmit={handleSubmit} className=\"flex flex-col\">\n                    <section className=\"flex flex-col flex-wrap lg:flex-row w-8/9\">\n                            <label htmlFor=\"property\">Property</label>\n                            <select \n                                name=\"property\"\n                                value={formData.property}\n                                onChange={handleChange}\n                                required={true}\n                                >\n                                    <>\n                                    <option disabled selected value> -- select an option -- </option>\n                                    {uniqueBuildings?.map((uniqueBuilding, buildingIndex) => (\n                                    <option required={true} key={buildingIndex}>{uniqueBuilding}</option>\n                                        ))}\n                                    </>\n                                    \n                            </select>\n                            <label htmlFor=\"subindex\">Property Subindex</label>\n                            <select \n                                name=\"subindex\"\n                                value={formData.subindex}\n                                onChange={handleChange}\n                                required={true}\n                                >\n                               {formData.property?\n                               <>\n                                {listaDeptos.filter(expense => expense.property === formData.property)\n                                .map((filteredBuilding, _index) => (\n                                    <option\n                                    id={_index}\n                                    >\n                                        {filteredBuilding.subindex}\n                                    </option>\n                                    ))\n                                }\n                               </>\n                               :\"\"}\n                                    \n                            </select>\n                            <label htmlFor=\"type\">Type</label>\n                            <select \n                                name=\"type\"\n                                value={formData.type}\n                                onChange={handleChange}\n                                required={true}\n                                >\n                                <option disabled selected value> -- select an option -- </option>\n                                <option value=\"expense\">Expense</option>\n                                <option value=\"income\" selected>Income</option>\n                            </select>\n                            <label htmlFor=\"amount\">Amount</label>\n                            <input \n                            id=\"amount\"\n                            name=\"amount\"\n                            type=\"number\"\n                            onChange={handleChange}\n                            required={true}\n                            value={formData.amount}\n                            />\n                            <label htmlFor=\"concept\">Concept</label>\n                            <input \n                            id=\"concept\"\n                            name=\"concept\"\n                            type=\"text\"\n                            onChange={handleChange}\n                            required={true}\n                            value={formData.concept}\n                            />\n                        <input type=\"su\" />\n                    </section>\n                </form>\n            </div>\n        </div>\n    )\n    \n}\nexport default TicketPage"]},"metadata":{},"sourceType":"module"}