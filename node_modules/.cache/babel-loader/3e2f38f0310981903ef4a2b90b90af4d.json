{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\rodan-app\\\\src\\\\Pages\\\\Chart\\\\index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  var _listaDeptos;\n\n  let {\n    buildingName,\n    amount,\n    dates\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-80\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl text-center font-bold\",\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, this), (_listaDeptos = listaDeptos) === null || _listaDeptos === void 0 ? void 0 : _listaDeptos.map((uniqueBuilding, buildingIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-8\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-white hover:bg-yellow-200 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow ml-8 w-3/4\",\n        children: uniqueBuilding.property\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 15\n      }, this)\n    }, buildingIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/alexa/Desktop/rodan-app/src/Pages/Chart/index.jsx"],"names":["Chart","buildingName","amount","dates","listaDeptos","map","uniqueBuilding","buildingIndex","property"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAACC,IAAAA,YAAD;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,GAAkC;AAC7C,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,kBAECC,WAFD,iDAEC,aAAaC,GAAb,CAAiB,CAACC,cAAD,EAAiBC,aAAjB,kBAChB;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAAA,6BAEI;AAAQ,QAAA,SAAS,EAAC,qHAAlB;AAAA,kBAA0ID,cAAc,CAACE;AAAzJ;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAUD,aAAV;AAAA;AAAA;AAAA;AAAA,YADD,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAZD;;KAAMP,K;AAcN,eAAeA,KAAf","sourcesContent":["const Chart = ({buildingName, amount, dates}) => {\r\n    return (\r\n        <div className=\"h-80\">\r\n        <h2 className=\"text-3xl text-center font-bold\">Chart</h2>\r\n        {listaDeptos?.map((uniqueBuilding, buildingIndex) => (\r\n          <div key={buildingIndex} className=\"my-8\">\r\n            \r\n              <button className=\"bg-white hover:bg-yellow-200 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow ml-8 w-3/4\" >{uniqueBuilding.property}</button>\r\n          </div>\r\n              ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart"]},"metadata":{},"sourceType":"module"}