{"ast":null,"code":"import { auth } from \"./firebase\";\nimport { GoogleAuthProvider, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { getDataById, getDocRef } from \"./CRUD\";\nimport { setDoc } from \"firebase/firestore\";\nconst provider = new GoogleAuthProvider(); // export const addUser = async (user) => {\n//     const {uid, displayName, email, photoURL} = user;\n//     const docRef = getDocRef(\"users\", uid);\n//     const userExist = await getDataById(\"users\", uid);\n//     if(!userExist){\n//         await setDoc(docRef, {\n//             email: email, \n//             name: displayName,\n//             photo: photoURL,\n//             uid, \n//         });\n//     }\n// };\n// SE USA POPUP PARA LOGIN\n\nexport const lognInGoogle = async () => {\n  try {\n    const userCredentials = await signInWithPopup(auth, provider);\n    addUser(userCredentials.user);\n    return userCredentials.user;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\nexport const signOutGoogle = async () => {\n  signOut(auth);\n};\nexport const handleAuthChange = async callback => {\n  const unSuscribe = onAuthStateChanged(auth, callback);\n  return unSuscribe;\n};","map":{"version":3,"sources":["/Users/efecto10/Desktop/FIrebase Config To HomePage (SignIn Google)/src/Services/authGoogle.jsx"],"names":["auth","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","signOut","getDataById","getDocRef","setDoc","provider","lognInGoogle","userCredentials","addUser","user","err","console","log","message","signOutGoogle","handleAuthChange","callback","unSuscribe"],"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,kBAA9C,EAAkEC,OAAlE,QAAiF,eAAjF;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,QAAvC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,MAAMC,QAAQ,GAAG,IAAIP,kBAAJ,EAAjB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMQ,YAAY,GAAG,YAAW;AACnC,MAAG;AACC,UAAMC,eAAe,GAAG,MAAMR,eAAe,CAACF,IAAD,EAAOQ,QAAP,CAA7C;AACAG,IAAAA,OAAO,CAACD,eAAe,CAACE,IAAjB,CAAP;AACA,WAAOF,eAAe,CAACE,IAAvB;AACH,GAJD,CAIE,OAAMC,GAAN,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,aAAa,GAAG,YAAY;AACrCb,EAAAA,OAAO,CAACJ,IAAD,CAAP;AACH,CAFM;AAIP,OAAO,MAAMkB,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAChD,QAAMC,UAAU,GAAGjB,kBAAkB,CAACH,IAAD,EAAOmB,QAAP,CAArC;AACA,SAAOC,UAAP;AACH,CAHM","sourcesContent":["import { auth } from \"./firebase\";\nimport { GoogleAuthProvider, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { getDataById, getDocRef } from \"./CRUD\";\nimport { setDoc } from \"firebase/firestore\";\n\nconst provider = new GoogleAuthProvider();\n\n// export const addUser = async (user) => {\n//     const {uid, displayName, email, photoURL} = user;\n//     const docRef = getDocRef(\"users\", uid);\n//     const userExist = await getDataById(\"users\", uid);\n\n//     if(!userExist){\n//         await setDoc(docRef, {\n//             email: email, \n//             name: displayName,\n//             photo: photoURL,\n//             uid, \n//         });\n//     }\n// };\n\n// SE USA POPUP PARA LOGIN\nexport const lognInGoogle = async ()=> {\n    try{\n        const userCredentials = await signInWithPopup(auth, provider);\n        addUser(userCredentials.user);\n        return userCredentials.user;\n    } catch(err){\n        console.log(err.message);\n    }\n}\n\nexport const signOutGoogle = async () => {\n    signOut(auth);\n}\n\nexport const handleAuthChange = async (callback) => {\n    const unSuscribe = onAuthStateChanged(auth, callback)\n    return unSuscribe\n}"]},"metadata":{},"sourceType":"module"}